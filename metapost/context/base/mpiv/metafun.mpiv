%D \module
%D   [       file=metafun.mp,
%D        version=2000.07.15,
%D          title=\CONTEXT\ \METAPOST\ graphics,
%D       subtitle=format generation file,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA / Hans Hagen \& Ton Otten}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

%D First we input John Hobby's metapost plain file. However, because we want to
%D prevent dependency problems and in the end even may use a patched version,
%D we prefer to use a copy.

prologues := 0 ;
mpprocset := 1 ;

input "mp-base.mpiv" ;
input "mp-tool.mpiv" ;
input "mp-mlib.mpiv" ;
%     "mp-core.mpiv" ; % todo: namespace and cleanup
input "mp-luas.mpiv" ; % experimental
input "mp-page.mpiv" ; % todo: namespace and cleanup
input "mp-butt.mpiv" ; % todo: namespace and cleanup
input "mp-shap.mpiv" ; % will be improved
input "mp-grph.mpiv" ; % todo: namespace and cleanup
input "mp-grid.mpiv" ; % todo: namespace and cleanup
input "mp-form.mpiv" ; % under (re)construction
input "mp-figs.mpiv" ; % obsolete, needs checking
input "mp-func.mpiv" ; % under construction
%     "mp-text.mpiv" ; % loaded on demand
%     "mp-char.mpiv" ; % loaded on demand
%     "mp-step.mpiv" ; % loaded on demand
%     "mp-chem.mpiv" ; % loaded on demand
input "mp-apos.mpiv" ;
input "mp-abck.mpiv" ;

string metafunversion ; metafunversion =
    "metafun iv"                        & " " &
    decimal year                        & "-" &
    decimal month                       & "-" &
    decimal day                         & " " &
    if ((time div 60) < 10)           :   "0" & fi
    decimal (time div 60)               & ":" &
    if ((time-(time div 60)*60) < 10) :   "0" & fi
    decimal (time-(time div 60)*60)   ;

let normalend = end ;

if known mplib :
    def end = ; message "" ; message metafunversion ; message "" ; endinput  ; enddef ;
    def bye = ; message "" ; message metafunversion ; message "" ; endinput  ; enddef ;
else :
    def end = ; message "" ; message metafunversion ; message "" ; normalend ; enddef ;
fi ;

% dump ; % obsolete in mplib
