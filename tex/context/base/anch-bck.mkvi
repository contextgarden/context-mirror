%D \module
%D   [       file=anch-bck, % moved from anch-pgr (1999.08.01)
%D        version=2011.12.19,
%D          title=\CONTEXT\ Anchoring Macros,
%D       subtitle=Backgrounds,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA ADE \& \CONTEXT\ Development Team}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

\writestatus{loading}{ConTeXt Anchoring Macros / Backgrounds}

%D This module is quite okay but at some point I might add methods
%D that use attributes although not too much is to be expected,
%D apart from better anchoring. In fact better anchoring can be
%D done independent of that.

\unprotect

% This might be overloaded later on:

% \defineoverlay[\v!text-2][\positionoverlay{\v!text-2}]
% \defineoverlay[\v!text-1][\positionoverlay{\v!text-1}]
% \defineoverlay[\v!text+1][\positionoverlay{\v!text+1}]
% \defineoverlay[\v!text+2][\positionoverlay{\v!text+2}]

% Paragraph positions:

\newcount\c_anch_backgrounds_text_n

\def\v_anch_backgrounds_text_current    {tbg:0}
\def\v_anch_backgrounds_anchor_current_b{b:\v_anch_backgrounds_text_current}
\def\v_anch_backgrounds_anchor_current_e{e:\v_anch_backgrounds_text_current}

\def\anch_backgrounds_text_initialize_next
  {\global\advance\c_anch_backgrounds_text_n\plusone
   \edef\v_anch_backgrounds_text_current{tbg:\number\c_anch_backgrounds_text_n}}

% \ifdefined\totalnoftextbackgrounds
%     % set in tuc
% \else
%     \newcounter\totalnoftextbackgrounds
% \fi
%
% \appendtoks
%     \savecurrentvalue\totalnoftextbackgrounds{\number\c_anch_backgrounds_text_n}%
% \to \everybye

% actually we can just ask lua to give us the nofpositions (or a least n<>0)

% The first position can be used in the middle of a paragraph in which case we're
% too late with initializing par positions. Therefore we check if positions are
% used at all.

\unexpanded\def\anch_backgrounds_text_initialize
  {\ctxcommand{doifelsepositionsused()}\enableparpositions\donothing
   \global\let\anch_backgrounds_text_initialize\relax}

\appendtoks
    \anch_backgrounds_text_initialize
\to \everystarttext

%D Some MP

\newcount\MPparcounter

\def\MPself     {\MPvar{self}}
\def\MPbself    {b:\MPvar{self}}
\def\MPeself    {e:\MPvar{self}}
\def\MPparanchor{p:\number\MPparcounter}

% \carryoverpar is needed for left/right floats

% \definetextbackground[more][state=start,backgroundcolor=red] % location=paragraph
% \definetextbackground[test][state=start,backgroundcolor=green]
%
% \page \placefigure[left]{}{}
%
% \starttextbackground[test]
%   \readfile{ward}{}{}
%   \starttextbackground[more]
%     \readfile{ward}{}{}
%   \stoptextbackground
%   \readfile{ward}{}{}
% \stoptextbackground
%
% \page \placefigure[right]{}{}
%
% \starttextbackground[test]
%   \readfile{ward}{}{}
%   \starttextbackground[more]
%     \readfile{ward}{}{}
%   \stoptextbackground
%   \readfile{ward}{}{}
% \stoptextbackground

\newcount\c_anch_backgrounds_text_level

\installcorenamespace{textbackground}
\installcorenamespace{textbackgroundlevel}

\installcommandhandler \??textbackground {textbackground} \??textbackground

\appendtoks
    \setuevalue{\currenttextbackground}{\groupedcommand{\starttextbackground[\currenttextbackground]}{\stoptextbackground}}%
    \setuevalue{\e!start\currenttextbackground}{\starttextbackground[\currenttextbackground]}%
    \setuevalue{\e!stop \currenttextbackground}{\stoptextbackground}%
    \doif{\textbackgroundparameter\c!state}\v!start\checktextbackgrounds
\to \everydefinetextbackground

\appendtoks
    \doif{\textbackgroundparameter\c!state}\v!start\checktextbackgrounds
\to \everysetuptextbackground

\unexpanded\def\starttextbackground
  {\begingroup
   \advance\c_anch_backgrounds_text_level\plusone
   \dodoubleempty\anch_backgrounds_text_start}

\def\anch_backgrounds_text_start[#tag][#settings]%
  {\checktextbackgrounds
   \def\currenttextbackground{#tag}%
   \anch_backgrounds_text_initialize_next
   \ifsecondargument
     \setupcurrenttextbackground[#settings]%
   \fi
   \doifelse{\textbackgroundparameter\c!state}\v!start
     \anch_backgrounds_text_preset_yes
     \anch_backgrounds_text_preset_nop
   \anch_backgrounds_text_start_indeed}

% todo \backgroundvariable\c!variant

\let\anch_backgrounds_text_start_indeed\relax
\let\anch_backgrounds_text_stop_indeed \relax

\setvalue{\??textbackgroundlevel\v!text}%
  {\let\anch_backgrounds_text_start_indeed\anch_backgrounds_text_start_txt
   \let\anch_backgrounds_text_stop_indeed \anch_backgrounds_text_stop_txt}

\setvalue{\??textbackgroundlevel\v!paragraph}%
  {\ifnum\c_anch_backgrounds_text_level>\plusone
     \let\anch_backgrounds_text_start_indeed\anch_backgrounds_text_start_txt
     \let\anch_backgrounds_text_stop_indeed \anch_backgrounds_text_stop_txt
   \else
     \let\anch_backgrounds_text_start_indeed\anch_backgrounds_text_start_par
     \let\anch_backgrounds_text_stop_indeed \anch_backgrounds_text_stop_par
   \fi}

\setvalue{\??textbackgroundlevel\v!none}%
  {\anch_backgrounds_text_preset_nop}

\def\anch_backgrounds_text_preset_nop
  {\let\anch_backgrounds_text_start_indeed\relax
   \let\anch_backgrounds_text_stop_indeed \relax}

\def\anch_backgrounds_text_preset_yes
  {\anch_backgrounds_text_preset_nop
   \csname\??textbackgroundlevel\textbackgroundparameter\c!location\endcsname
   \edef\m_anch_backgrounds_text_frame     {\textbackgroundparameter\c!frame}%
   \edef\m_anch_backgrounds_text_corner    {\textbackgroundparameter\c!corner}%
   \edef\m_anch_backgrounds_text_background{\textbackgroundparameter\c!background}%
   \ifx\m_anch_backgrounds_text_frame\v!on
     \ifx\m_anch_backgrounds_text_corner\v!round
       \let\m_anch_backgrounds_text_frame\!!plustwo
     \else
       \let\m_anch_backgrounds_text_frame\!!plusone
     \fi
   \else
     \let\m_anch_backgrounds_text_frame\!!zerocount
   \fi
   \ifx\m_anch_backgrounds_text_background\v!color
     \let\m_anch_backgrounds_text_background\!!plusone
   \else
     \let\m_anch_backgrounds_text_background\!!zerocount
   \fi
   \startpositionoverlay{\textbackgroundoverlay{\textbackgroundparameter\c!level}}%
     \anch_backgrounds_text_meta_graphic % gets expanded directly
   \stoppositionoverlay}

\def\anch_backgrounds_text_meta_graphic
  {\normalexpanded
     {\setMPpositiongraphicrange % needs to be optimized
        {\v_anch_backgrounds_anchor_current_b}%
        {\v_anch_backgrounds_anchor_current_e}%
        {\textbackgroundparameter\c!method}%
        {self=\v_anch_backgrounds_text_current,
         mp=\textbackgroundparameter\c!mp,
         gridtype=\textbackgroundparameter\c!alternative,
         filltype=\m_anch_backgrounds_text_background,
         linetype=\m_anch_backgrounds_text_frame,
         dashtype=\textbackgroundparameter\c!dash,
         gridcolor=\textbackgroundparameter\c!framecolor,
         linecolor=\textbackgroundparameter\c!framecolor,
         lineoffset=\textbackgroundparameter\c!frameoffset,
         fillcolor=\textbackgroundparameter\c!backgroundcolor,
         filloffset=\textbackgroundparameter\c!backgroundoffset,
         gridwidth=\textbackgroundparameter\c!rulethickness,
         gridshift=\textbackgroundparameter\c!voffset,
         linewidth=\textbackgroundparameter\c!rulethickness,
         lineradius=\textbackgroundparameter\c!radius}}}

\unexpanded\def\stoptextbackground
  {\anch_backgrounds_text_stop_indeed
   \carryoverpar\endgroup} % why doesn't this work ?

\unexpanded\def\starttextbackgroundmanual
  {\begingroup
   \usetextbackgroundstyleandcolor\c!style\c!color
   \bpos\v_anch_backgrounds_text_current}

\unexpanded\def\stoptextbackgroundmanual
  {\epos\v_anch_backgrounds_text_current
   \carryoverpar\endgroup}

\def\anch_backgrounds_text_start_txt
  {\ifvmode \dontleavehmode \fi
   \begingroup
   \usetextbackgroundstyleandcolor\c!style\c!color
   \bpos\v_anch_backgrounds_text_current}

\def\anch_backgrounds_text_stop_txt
  {\epos\v_anch_backgrounds_text_current
   \carryoverpar\endgroup}

\newskip\textbackgroundskip

\def\anch_backgrounds_text_start_par
  {\endgraf % new
   \textbackgroundparameter\c!before
   \begingroup
   \begingroup
   \resetallattributes % \attribute\linenumberattribute \attributeunsetvalue
   \noindent
   \ifgridsnapping
     \spac_helpers_assign_skip\textbackgroundskip{\textbackgroundparameter\c!topoffset}%
     \ifdim\textbackgroundskip>\zeropoint
       \struttedbox{\hbox{\raise\textbackgroundskip\hbox{\bpos\v_anch_backgrounds_text_current}}}%
     \else
       \bpos\v_anch_backgrounds_text_current
     \fi
   \else
     \bpos\v_anch_backgrounds_text_current
   \fi
   \endgraf % we need a vertical nobreak - 29/06/2004
   \endgroup
   \nobreak
   \vskip-\lineheight
   \nobreak
   \ifgridsnapping \else
     \spac_helpers_assign_skip\textbackgroundskip{\textbackgroundparameter\c!topoffset}%
     \ifdim\textbackgroundskip>\zeropoint
        \kern\textbackgroundskip\nobreak
     \fi
   \fi
   \dosetleftskipadaption{\textbackgroundparameter\c!leftoffset}%
   \advance\leftskip\leftskipadaption
   \dosetleftskipadaption{\textbackgroundparameter\c!rightoffset}%
   \advance\rightskip\leftskipadaption
   % new
   \dosetraggedcommand{\textbackgroundparameter\c!align}%
   \raggedcommand
   %
   \usetextbackgroundstyleandcolor\c!style\c!color
   \nowhitespace
   \nobreak % new per 23/04/2006 (else potential break when whitespace)
   \seteffectivehsize
   \doinhibitblank %   \blank[\v!disable]% new
   \par}

\def\anch_backgrounds_text_stop_par
  {\par
   \removelastskip % new
   \spac_helpers_assign_skip\textbackgroundskip{\textbackgroundparameter\c!bottomoffset}%
   \ifdim\lastskip>\zeropoint
     \advance\textbackgroundskip-\lastskip
   \fi
   \ifgridsnapping \else \ifdim\textbackgroundskip>\zeropoint
     \kern\textbackgroundskip\nobreak
   \fi \fi
   \nobreak
   \vskip-\dimexpr\lineheight+\parskip\relax
   \nobreak
   \endgroup
   \begingroup
   \forgeteverypar % NOT REALLY NEEDED, SAVES HASH/MEM
   \resetallattributes % \attribute\linenumberattribute \attributeunsetvalue
   \nobreak \noindent \strut \hfill \kern\zeropoint
   \spac_helpers_assign_skip\textbackgroundskip{\textbackgroundparameter\c!bottomoffset}%
   \ifgridsnapping % experimental, pascal (todo: topoffset in same way)
     \ifdim\textbackgroundskip>\zeropoint
       \struttedbox\plusone{\hbox{\lower\textbackgroundskip\hbox{\epos\v_anch_backgrounds_text_current}}}%
     \else
       \epos\v_anch_backgrounds_text_current
     \fi
   \else
     \epos\v_anch_backgrounds_text_current
   \fi
   \endgraf
   \carryoverpar\endgroup
   \endgraf % new
   \textbackgroundparameter\c!after}

\def\checktextbackgrounds
  {\ifproductionrun
     \enabletextarearegistration
     \enablehiddenbackground
   \fi}

\setuptextbackground
  [\c!mp=mpos:par:columnset,      % buggy: mpos:par:shape
   \c!method=mpos:par:columnset, %
   \c!state=\v!start,
   \c!location=\v!text,
   \c!leftoffset=\!!zeropoint, % 1em,
   \c!rightoffset=\textbackgroundparameter\c!leftoffset,
   \c!topoffset=\!!zeropoint,  % \v!medium,
   \c!bottomoffset=\textbackgroundparameter\c!topoffset,
   \c!level=-1,
   \c!alternative=0,
   \c!align=,
   \c!dash=0, % to be internationalized
   \c!background=\v!color,
   \c!backgroundcolor=lightgray,
   \c!backgroundoffset=\!!zeropoint,
   \c!corner=\v!rectangular,
   \c!radius=.5\bodyfontsize,
   \c!voffset=\!!zeropoint,
   \c!frame=\v!on,
   \c!framecolor=blue,
   \c!rulethickness=\linewidth]

%D The \METAPOST\ connection:

%D Some of these macros are pretty clever but too complicated
%D to be nice. When things are kind of stable I'll clean up
%D this mess.

\setupMPvariables
  [mpos:box]
  [linecolor=blue,
   linewidth=\linewidth,
   fillcolor=lightgray,
   filloffset=\!!zeropoint]

\startMPpositiongraphic{mpos:box}{fillcolor,linecolor,linewidth}
    initialize_box(\MPpos{\MPvar{self}}) ;
    def boxfilloptions = withcolor \MPvar{fillcolor} enddef ;
    def boxlineoptions = withcolor \MPvar{linecolor} enddef ;
    boxlinewidth  := \MPvar{linewidth} ;
    boxfilloffset := \MPvar{filloffset} ;
    draw_box ;
    anchor_box(\MPanchor{\MPvar{self}}) ;
\stopMPpositiongraphic

\setupMPvariables
  [mpos:area]
  [linecolor=blue,
   linewidth=\linewidth,
   fillcolor=lightgray,
   filloffset=\!!zeropoint]

\startMPpositiongraphic{mpos:area}{fillcolor,linecolor,linewidth}
    initialize_area(\MPpos{b:\MPvar{self}},\MPpos{e:\MPvar{self}}) ;
    def boxfilloptions = withcolor \MPvar{fillcolor} enddef ;
    def boxlineoptions = withcolor \MPvar{linecolor} enddef ;
    boxlinewidth  := \MPvar{linewidth} ;
    boxfilloffset := \MPvar{filloffset} ;
    draw_area ;
    anchor_area(\MPanchor{b:\MPvar{self}}) ;
\stopMPpositiongraphic

% gridtype = 1 => baseline
% gridtype = 2 => betweenline

\setupMPvariables
  [mpos:par]
  [mp=mpos:par:shape,
   gridtype=0,
   linetype=1,
   filltype=1,
   dashtype=0, % 1 = dashed, 2 = dashed with background
  %snaptops=true, % not that nice: true/false
   gridcolor=red,
   linecolor=blue,
   fillcolor=lightgray,
   filloffset=\!!zeropoint,
   linewidth=\linewidth,
   gridwidth=\linewidth,
   gridshift=\!!zeropoint,
   lineradius=.5\bodyfontsize,
   dashtype=1]

\startuseMPgraphic{mpos:par:shape}
    \iftracepositions show_par \else draw_par \fi ;
\stopuseMPgraphic

\startuseMPgraphic{mpos:par:setup}
    boxgridtype   := \MPvar{gridtype} ;
    boxlinetype   := \MPvar{linetype} ;
    boxfilltype   := \MPvar{filltype} ;
    boxdashtype   := \MPvar{dashtype} ;
    def boxgridoptions = withcolor \MPvar{gridcolor} enddef ;
    def boxlineoptions = withcolor \MPvar{linecolor} enddef ;
    def boxfilloptions = withcolor \MPvar{fillcolor} enddef ;
    boxfilloffset := \MPvar{filloffset} ;
    boxlinewidth  := \MPvar{linewidth} ;
    boxgridwidth  := \MPvar{gridwidth} ;
    boxgridshift  := \MPvar{gridshift} ;
    boxlineradius := \MPvar{lineradius} ;
    %snap_multi_par_tops := \MPvar{snaptops} ;
\stopuseMPgraphic

\startuseMPgraphic{mpos:par:extra}
    % user stuff, like:
    % snap_multi_par_tops := false ;
\stopuseMPgraphic

\startMPpositionmethod{mpos:par} %%%%%%%%%%% will become obsolete
    \MPparcounter\MPn\MPbself\relax
    \startMPpositiongraphic{mpos:par}{fillcolor,filloffset,linecolor,gridcolor,linewidth,gridwidth,gridshift,lineradius}
        initialize_par(\MPposset{\MPvar{self}}) ;
        \includeMPgraphic{mpos:par:setup} ;
        \includeMPgraphic{mpos:par:extra} ;
        \includeMPgraphic{\MPvar{mp}} ;
        anchor_par(\MPanchor\MPbself) ;
    \stopMPpositiongraphic
    \MPpositiongraphic{mpos:par}{}%
\stopMPpositionmethod

%D The next alternative works in columnsets :

\startuseMPgraphic{mpos:par:columnset}
    \iftracepositions show_multi_pars \else draw_multi_pars \fi ;
\stopuseMPgraphic

\startuseMPgraphic{mpos:par:sideline}{linecolor,lineoffset,linewidth}
    begingroup ; save p ; picture p ;
    for i=1 upto nofmultipars :
        p := image ( fill leftboundary multipars[i]
            shifted (-\MPvar{lineoffset},0)
            rightenlarged \MPvar{linewidth} withcolor \MPvar{linecolor} ;
        ) ;
        setbounds p to multipars[i] ;
        draw p ;
    endfor ;
    endgroup ;
\stopuseMPgraphic

% we can flush 5 in one call (saved 4 lua calls) .. brrr wself .. will change

\def\MPposset#1{\ctxcommand{MPposset("#1")}}

\startMPpositionmethod{mpos:par:columnset}
    \MPparcounter\MPn\MPbself\relax
\edef\regionanchor{\MPr\MPbself}%
\ifx\regionanchor\empty
    \regionpositioningfalse
\else
    \regionpositioningtrue
\fi
    \startMPpositiongraphic{mpos:par}{fillcolor,filloffset,linecolor,gridcolor,linewidth,gridwidth,gridshift,lineradius}
        \includeMPgraphic{mpos:par:setup} ;
        \includeMPgraphic{mpos:par:extra} ;
        prepare_multi_pars(\MPposset{\MPvar{self}}) ;
        relocate_multipars(-\MPxy\MPanchorid) ; % inside layerpos
        \includeMPgraphic{\MPvar{mp}} ;
    \stopMPpositiongraphic
    \MPpositiongraphic{mpos:par}{}%
\regionpositioningfalse
\stopMPpositionmethod

% new:

% \setuptextbackground
%   [\c!mp=mpos:par:region,
%    \c!method=mpos:par:region]

\startMPpositionmethod{mpos:par:region}
    \startMPpositiongraphic{mpos:par}{fillcolor,filloffset,linecolor,gridcolor,linewidth,gridwidth,gridshift,lineradius}
        \includeMPgraphic{mpos:par:setup} ;
        \includeMPgraphic{mpos:par:extra} ;
        \ctxcommand{fetchmultipar("\MPvar{self}",\the\realpageno,"\MPanchorid")}
        \includeMPgraphic{\MPvar{mp}} ;
        setbounds currentpicture to multibox ;
    \stopMPpositiongraphic
    \MPpositiongraphic{mpos:par}{}%
\stopMPpositionmethod

\startuseMPgraphic{mpos:par:region}
    \iftracepositions
        show_multi_pars
    \else
        draw_multi_pars
    \fi ;
\stopuseMPgraphic

\startuseMPgraphic{mpos:par:region:kind}
    for i=1 upto nofmultipars :
        fill multipars[i] %^ shifted (0,2mm)
            withcolor
                if      multikind[i] = "single" : yellow
                elseif  multikind[i] = "first"  : red
                elseif  multikind[i] = "middle" : green
                elseif  multikind[i] = "last"   : blue
                fi
            withtransparency (1,.5)
        ;
    endfor ;
\stopuseMPgraphic

\setuptextbackground
  [\c!mp=mpos:par:region,
   \c!method=mpos:par:region]

%D \starttyping
%D \setupbackground
%D   [test]
%D   [mp=mpos:par:columnset,
%D    method=mpos:par:columnset]
%D \stoptyping

%D We need to treat floats in a special way.

\startMPinitializations
    local_multi_par_area:=\iflocalpositioning  true\else false\fi;
    use_multi_par_region:=\ifregionpositioning true\else false\fi;
\stopMPinitializations

%D As an example we define a grid background:

\definetextbackground
  [\v!grid]
  [\c!state=\v!stop,
   \c!location=\v!paragraph,
   \c!frame=\v!off,
   \c!framecolor=red,
   \c!background=,
   \c!alternative=1]

\ifx\basegrid\undefined \else \letvalue\v!grid=\basegrid \fi

%D Whatever

\setupMPvariables
  [mpos:connect]
  [linecolor=red,
   linewidth=1pt]

\setupMPvariables
  [mpos:encircle]
  [fillcolor=lightgray,
   filloffset=\!!zeropoint,
   linecolor=blue,
   linewidth=1pt]

% these might become macros in mp-page

\startuseMPgraphic{mpos:common:ec}
    path pa ; pair ca ; numeric lw ;
    lw := \MPvar{linewidth} ;
    initialize_box(\MPpos{\MPvar{self}}) ;
    pa := pxy ; ca := cxy ; pa := boundingbox pa enlarged 2lw ;
    pa := llcorner pa ... lrcorner pa ... urcorner pa ... ulcorner pa ... cycle ;
    drawoptions (withpen pencircle scaled lw withcolor \MPvar{linecolor}) ;
\stopuseMPgraphic

\startMPpositiongraphic{mpos:encircle}{linecolor,fillcolor,linewidth}
    \includeMPgraphic{mpos:common:ec}
    fill pa withcolor \MPvar{fillcolor} ; draw pa ;
    anchor_box(\MPanchor{\MPvar{self}}) ;
\stopMPpositiongraphic

\startMPpositiongraphic{mpos:connect}{linecolor,linewidth}
    path pb, pc ; pair cb, cc ;
    \includeMPgraphic{mpos:common:ec}
    initialize_box(\MPpos{\MPvar{to}}) ;
    pb := pxy ; cb := cxy ; pb := boundingbox pb enlarged 2lw ;
    pb := llcorner pb...lrcorner pb...urcorner pb...ulcorner pb...cycle ;
    pc := ca {up} .. {down} cb ;
    cc := (pc intersection_point pa) ;
    if intersection_found :
        pc := pc cutbefore cc ;
        cc := (pc intersection_point pb) ;
        if intersection_found :
            pc := pc cutafter cc ;
            drawarrow pc ; drawarrow reverse pc ;
        fi ;
    fi ;
    anchor_box(\MPanchor{\MPvar{self}}) ;
\stopMPpositiongraphic

\protect \endinput

\definetextbackground[underline]    [location=text,alternative=1,background=,frame=off]
\definetextbackground[overstrike]   [location=text,alternative=2,background=,frame=off]
\definetextbackground[exlines]      [location=text,alternative=3,background=,frame=off]
\definetextbackground[strikethrough][location=text,alternative=4,background=,frame=off]

\definestartstop [underline]
  [before={\starttextbackground[underline]},
   after=\stoptextbackground]

\definestartstop
  [overstrike]
  [before={\starttextbackground[overstrike]},
   after=\stoptextbackground]

\definestartstop
  [exlines]
  [before={\starttextbackground[exlines]},
   after=\stoptextbackground]

\definestartstop
  [strikethrough]
  [before={\starttextbackground[strikethrough]},
   after=\stoptextbackground]

\definetextbackground
  [sideline]
  [mp=mpos:par:sideline,
   location=paragraph,
   framecolor=red,
   frameoffset=5mm]

\definestartstop [sideline]
  [before={\starttextbackground[sideline]},
   after=\stoptextbackground]

\starttext
    \startunderline     \input tufte \stopunderline      \blank
    \startoverstrike    \input tufte \stopoverstrike     \blank
    \startexlines       \input tufte \stopexlines        \blank
    \startstrikethrough \input tufte \stopstrikethrough  \blank
    \startsideline      \input tufte \stopsideline       \blank
\stoptext
