%D \module
%D   [       file=catc-ini,
%D        version=2006.09.18,
%D          title=\CONTEXT\ System Macros,
%D       subtitle=Catcode Handling,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA / Hans Hagen \& Ton Otten}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

%D We've split the functionality of syst-cat.* over more files
%D now so that we can load more selectively.

\registerctxluafile{catc-ini}{1.001}

%D A long standing wish has been the availability of catcode
%D arrays. Because traditional \TEX\ does not provide this we
%D implement a fake method in the \MKII\ file. There is some
%D overlap in code with \MKII\ but we take that for granted.

\setnewconstant\escapecatcode          0
\setnewconstant\begingroupcatcode      1
\setnewconstant\endgroupcatcode        2
\setnewconstant\mathshiftcatcode       3
\setnewconstant\alignmentcatcode       4
\setnewconstant\endoflinecatcode       5
\setnewconstant\parametercatcode       6
\setnewconstant\superscriptcatcode     7
\setnewconstant\subscriptcatcode       8
\setnewconstant\ignorecatcode          9
\setnewconstant\spacecatcode          10
\setnewconstant\lettercatcode         11
\setnewconstant\othercatcode          12  \let\other \othercatcode
\setnewconstant\activecatcode         13  \let\active\activecatcode
\setnewconstant\commentcatcode        14
\setnewconstant\invalidcatcode        15

\setnewconstant\tabasciicode           9
\setnewconstant\newlineasciicode      10  % don't confuse this one with \endoflineasciicode
\setnewconstant\formfeedasciicode     12
\setnewconstant\endoflineasciicode    13  % somewhat messy but this can be the active \par
\setnewconstant\endoffileasciicode    26
\setnewconstant\spaceasciicode        32
\setnewconstant\hashasciicode         35
\setnewconstant\dollarasciicode       36
\setnewconstant\commentasciicode      37
\setnewconstant\ampersandasciicode    38
\setnewconstant\backslashasciicode    92 % `\\
\setnewconstant\circumflexasciicode   94
\setnewconstant\underscoreasciicode   95
\setnewconstant\leftbraceasciicode   123 % `\{
\setnewconstant\barasciicode         124 % `\|
\setnewconstant\rightbraceasciicode  125 % `\}
\setnewconstant\tildeasciicode       126 % `\~
\setnewconstant\delasciicode         127

\bgroup
    \catcode \tabasciicode       \activecatcode  \gdef\activetabtoken      {^^I}
                                                 \gdef\outputnewlinechar   {^^J}
    \catcode \formfeedasciicode  \activecatcode  \gdef\activeformfeedtoken {^^L}
    \catcode \endoflineasciicode \activecatcode  \gdef\activeendoflinetoken{^^M}
\egroup

% \endlinechar = \endoflineasciicode % appended to input lines
% \newlinechar = \newlineasciicode   % can be used in write

% rather special and used in writing to file: \let\par\outputnewlinechar

\def\initializenewlinechar % operating system dependent
  {\bgroup
   \newlinechar\newlineasciicode
   \xdef\outputnewlinechar{^^J}%
   \egroup}

\ifx\gobbleoneargument\undefined \long\def\gobbleoneargument#1{} \fi

\newif \ifrecatcodeuppercharacters % only used in good old tex

\newcount\cctdefcounter \cctdefcounter\zerocount % 0 = signal, so advance before allocate

\newcount\cctcountera
\newcount\cctcounterb
\newcount\cctcounterc

\def\newcatcodetable#1%
  {\global\advance\cctdefcounter\plusone
   \expandafter\xdef\csname @@ccn:\number\cctdefcounter\endcsname{\string#1}% logging
   \newconstant#1%
   #1\cctdefcounter
   \ctxlua{catcodes.register("\expandafter\gobbleoneargument\string#1",\number#1)}}

\newcatcodetable \scratchcatcodes \initcatcodetable\scratchcatcodes

\newtoks \setdefaultcatcodes

\setdefaultcatcodes
  {\catcode\backslashasciicode\othercatcode
   \catcode\endoflineasciicode\othercatcode
   \catcode\spaceasciicode    \othercatcode
   \catcode\commentasciicode  \othercatcode
   \catcode\delasciicode      \othercatcode}

\long\normalprotected\def\startcatcodetable#1#2\stopcatcodetable
  {\bgroup
   \catcodetable\scratchcatcodes
   \the\setdefaultcatcodes
   #2%
   \savecatcodetable#1\relax
   \egroup}

\def\permitcircumflexescape % to be used grouped
  {\catcode\circumflexasciicode\superscriptcatcode}

\let\permitcaretescape\permitcircumflexescape

\newcatcodetable\dummycatcodes

\long\normalprotected\def\startextendcatcodetable#1#2\stopextendcatcodetable
  {\bgroup
   \catcodetable#1\relax
   \globaldefs\plusone
   #2%
   \globaldefs\zerocount
   \egroup}

% ==
%
% \long\normalprotected\def\startextendcatcodetable#1#2\stopextendcatcodetable
%   {\bgroup
%    \scratchcounter\the\catcodetable
%    \catcodetable #1 #2
%    \catcodetable\scratchcounter
%    \egroup}

\def\letcatcodecommand
  {\afterassignment\letcatcodecommanda\cctcountera}

\def\letcatcodecommanda
  {\afterassignment\letcatcodecommandb\cctcounterb}

\let\currentcatcodetable\catcodetable

%D The next command can be defined in a cleaner way in the
%D Mk IV file but we want to have a fast one with a minimal
%D chance for interference. Do we still need this complex
%D mechanism? Future versions of \MKIV\ might only use
%D active characters for very special cases.

\setnewconstant\activehackcode \tildeasciicode

%D Once a catcode is assigned, the next assignments will happen faster.

% (expandable) let

\def\letcatcodecommand {\afterassignment\letcatcodecommanda\cctcountera}
\def\letcatcodecommanda{\afterassignment\letcatcodecommandb\cctcounterb}

\def\letcatcodecommandb % each time
  {\ifcsname CCL:\number\cctcountera:\number\cctcounterb\endcsname
     \csname CCL:\number\cctcountera:\number\cctcounterb\expandafter\endcsname
   \else
     \expandafter\letcatcodecommandc
   \fi}

\def\letcatcodecommandc % only first time
  {\expandafter\gdef\csname CCL:\number\cctcountera:\number\cctcounterb\expandafter\endcsname\expandafter
     {\expandafter\let\csname CCC:\number\cctcountera:\number\cctcounterb\endcsname}%
   \reinstatecatcodecommandua % unexpanded
   \csname CCL:\number\cctcountera:\number\cctcounterb\endcsname}

% expandable def

\def\defcatcodecommand {\afterassignment\defcatcodecommanda\cctcountera}
\def\defcatcodecommanda{\afterassignment\defcatcodecommandb\cctcounterb}

\def\defcatcodecommandb % each time
  {\ifcsname CCD:\number\cctcountera:\number\cctcounterb\endcsname
     \csname CCD:\number\cctcountera:\number\cctcounterb\expandafter\endcsname
   \else
     \expandafter\defcatcodecommandc
   \fi}

\def\defcatcodecommandc % only first time (we could use \normalexpanded here)
  {\expandafter\gdef\csname CCD:\number\cctcountera:\number\cctcounterb\expandafter\endcsname
     \expandafter##\expandafter1\expandafter
       {\expandafter\def\csname CCC:\number\cctcountera:\number\cctcounterb\endcsname{##1}}%
   \reinstatecatcodecommanda
   \csname CCD:\number\cctcountera:\number\cctcounterb\endcsname}

% unexpandable def (e.g. used for discretionaries)

\def\uedcatcodecommand {\afterassignment\uedcatcodecommanda\cctcountera}
\def\uedcatcodecommanda{\afterassignment\uedcatcodecommandb\cctcounterb}

\def\uedcatcodecommandb % each time
  {\ifcsname CCU:\number\cctcountera:\number\cctcounterb\endcsname
     \csname CCU:\number\cctcountera:\number\cctcounterb\expandafter\endcsname
   \else
     \expandafter\uedcatcodecommandc
   \fi}

\def\uedcatcodecommandc % only first time
  {\expandafter\gdef\csname CCU:\number\cctcountera:\number\cctcounterb\expandafter\endcsname
     \expandafter##\expandafter1\expandafter
       {\expandafter\normalprotected\expandafter\def\csname CCC:\number\cctcountera:\number\cctcounterb\endcsname{##1}}%
   \reinstatecatcodecommandua % unexpanded
   \csname CCU:\number\cctcountera:\number\cctcounterb\endcsname}

\def\reinstatecatcodecommand{\afterassignment\reinstatecatcodecommanda\cctcounterb}

\def\reinstatecatcodecommanda % can be used when a direct definition has been done
  {\bgroup                    % and the selector has been lost
   \uccode\activehackcode\cctcounterb
   \catcode\uccode\activehackcode\activecatcode
   \uppercase{\xdef~{\noexpand\catcodecommand{\number\cctcounterb}}}%
   \egroup}

\def\reinstatecatcodecommandua % can be used when a direct definition has been done
  {\bgroup                     % and the selector has been lost
   \uccode\activehackcode\cctcounterb
   \catcode\uccode\activehackcode\activecatcode
   \uppercase{\normalprotected\xdef~{\noexpand\catcodecommand{\number\cctcounterb}}}%
   \egroup}

\newconstant\defaultcatcodetable

\def\catcodecommand#1%
  {\csname CCC:\number
     \ifcsname CCC:\number\currentcatcodetable:\number#1\endcsname
       \currentcatcodetable \else \defaultcatcodetable
     \fi
   :\number#1\endcsname}

%D \macros
%D   {restorecatcodes,pushcatcodetable,popcatcodetable}
%D
%D We're not finished dealing \CATCODES\ yet. In \CONTEXT\ we
%D use only one auxiliary file, which deals with tables of
%D contents, registers, two pass tracking, references etc. This
%D file, as well as files concerning graphics, is processed when
%D needed, which can be in the mid of typesetting verbatim.
%D However, when reading in data in verbatim mode, we should
%D temporary restore the normal \CATCODES, and that's exactly
%D what the next macros do. Saving the catcodes can be
%D disabled by saying \type{\localcatcodestrue}.

% quite likely we will define \unexpanded earlier on so
% that \normalprotected will go

\let\savedcatcodetable\relax

\newcount\catcoderestorelevel

\normalprotected\def\pushcatcodetable
  {\advance\catcoderestorelevel\plusone
   \tracepushcatcodetable
   \expandafter\chardef\csname scct:\number\catcoderestorelevel\endcsname\currentcatcodetable}

\normalprotected\def\popcatcodetable
  {\ifcase\catcoderestorelevel
     \showcatcodenestingerror
   \else
     \expandafter\catcodetable\csname scct:\number\catcoderestorelevel\endcsname
     \tracepopcatcodetable
     \advance\catcoderestorelevel\minusone
   \fi}

\normalprotected\def\showcatcodenestingerror % can be overloaded
  {\immediate\write16{}%
   \immediate\write16{Fatal error: catcode push/pop mismatch. Fix this!}\wait\end
   \immediate\write16{}}

\normalprotected\def\restorecatcodes % takes previous level
  {\ifnum\catcoderestorelevel>\plusone
     \expandafter\catcodetable\csname scct:\number\numexpr\catcoderestorelevel-1\relax\endcsname
   \fi}

\newtoks\everycatcodetable

\normalprotected\def\setcatcodetable#1%
  {\catcodetable#1%
   \the\everycatcodetable
   \tracesetcatcodetable}

\def\dotracecatcodetable#1{\immediate\write16{[#1]}}

\def\tracecatcodetables
  {\def\tracesetcatcodetable {\dotracecatcodetable{set  \catcodetablename\space                              at \number\catcoderestorelevel}}%
   \def\tracepushcatcodetable{\dotracecatcodetable{push \catcodetablename\space from \catcodetableprev\space at \number\catcoderestorelevel}}%
   \def\tracepopcatcodetable {\dotracecatcodetable{pop  \catcodetablename\space to   \catcodetableprev\space at \number\catcoderestorelevel}}}

\def\catcodetableprev
  {\ifnum\numexpr\catcoderestorelevel-1\relax>\zerocount
     \csname @@ccn:\number\csname scct:\number\numexpr\catcoderestorelevel-1\relax\endcsname\endcsname
   \else
     -%
   \fi}

\def\catcodetablename
  {\ifnum\currentcatcodetable>\zerocount
     \csname @@ccn:\number\currentcatcodetable\endcsname
   \else
     -%
   \fi}

\ifx\empty\undefined \def\empty{} \fi

\let\tracesetcatcodetable \empty
\let\tracepushcatcodetable\empty
\let\tracepopcatcodetable \empty

%D Handy for debugging:

% \tracecatcodetables

% D Only in \MKIV\ (to be used when crossing pages with changed catcodes
% D in the current vector):
% D
% D \starttyping
% D \normalprotected\def\startcrap
% D   {\bgroup
% D    \pushcatcodes
% D    \whitespace
% D    \obeylines
% D    \activatespacehandler\v!yes
% D    \strut}
% D
% D \normalprotected\def\stopcrap
% D   {\popcatcodes
% D   \egroup}
% D \stoptyping
%
% \newcount\catcodetablelevel
%
% \def\pushcatcodes
%   {\bgroup
%    \global\advance\catcodetablelevel\plusone
%    \ifcsname @@ccf:\number\catcodetablelevel\endcsname \else
%      \global\advance\cctdefcounter\plusone
%      \expandafter\global\expandafter\chardef\csname @@ccf:\number\catcodetablelevel\endcsname\cctdefcounter
%    \fi
%    \catcodetable\ctxcatcodes
%    \expandafter\savecatcodetable\csname @@ccf:\number\catcodetablelevel\endcsname
%    \egroup
%    \expandafter\catcodetable\csname @@ccf:\number\catcodetablelevel\endcsname}
%
% \def\popcatcodes
%   {\global\advance\catcodetablelevel\minusone}

\endinput

