%D \module
%D   [       file=colo-ext, % mostof thsi code used to be in colo-ini.tex
%D        version=1997.04.01,
%D          title=\CONTEXT\ Color Macros,
%D       subtitle=Extras,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA ADE \& \CONTEXT\ Development Team}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

\writestatus{loading}{ConTeXt Color Macros / Extras}

\unprotect

%D \macros
%D   {negatecolorcomponent, negativecolorbox}
%D
%D Sometimes, especially when we deal with typesetting
%D devices, we want to reverse the color scheme. Instead of
%D recalculating all those colors, we use a quick and dirty
%D approach:
%D
%D \starttyping
%D \negativecolorbox0
%D \stoptyping
%D
%D will negate the colors in box zero.

\unexpanded\def\negatecolorbox#1%
  {\setbox#1\hbox
     {\startnegativeproperty % might change
      \startcolor[\s!white]\vrule\!!height\ht#1\!!depth\dp#1\!!width\wd#1\stopcolor
      \hskip-\wd#1%
      \box#1%
      \stopnegativeproperty}}

%D There are in principle two ways to handle overprint: bound to colors
%D or independent. For the moment we only support independent overprint
%D handling. Here we deal with a per-document setting.

%D We can move the stack and attribute setting to the \LUA\ end.

\installcorenamespace{colorintent}

\unexpanded\def\registercolorintent#1#2%
  {\setevalue{\??colorintent#1}{\attribute\colorintentattribute\ctxcommand{registercolorintent('#2')} }}

\unexpanded\def\colors_trigger_intent
  {\ctxcommand{enablecolorintents()}%
   \unexpanded\gdef\colors_trigger_intent##1{\csname\??colorintent##1\endcsname}%
   \colors_trigger_intent}

\registercolorintent{knockout} {knockout}
\registercolorintent{overprint}{overprint}

\installattributestack\colorintentattribute

\setevalue{\??colorintent\v!none}{\attribute\colorintentattribute\attributeunsetvalue} % or reset? used at all?

\unexpanded\def\startcolorintent[#1]%
  {\pushattribute\colorintentattribute
   \colors_trigger_intent{#1}}

\unexpanded\def\stopcolorintent
  {\popattribute\colorintentattribute}

\unexpanded\def\startoverprint{\startcolorintent[\v!overprint]}
\unexpanded\def\startknockout {\startcolorintent[\v!knockout ]}

\let\stopoverprint\stopcolorintent
\let\stopknockout \stopcolorintent

\let\starttextcolorintent\relax
\let\stoptextcolorintent \relax

\appendtoks
    \colors_set_text_intent
\to \everysetupcolors

\let\p_colors_intent\empty

\def\colors_set_text_intent
  {\edef\p_colors_intent{\colorsparameter\c!intent}%
   \ifx\p_colors_intent\v!none \else
     \unexpanded\xdef\starttextcolorintent{\colors_trigger_intent{\p_colors_intent}}%
     \glet\colors_set_text_intent\relax
     \colors_trigger_intent\p_colors_intent
   \fi}

\appendtoks \starttextcolorintent \to \everystarttextproperties
\appendtoks \stoptextcolorintent  \to \everystoptextproperties

\setupcolors
  [\c!intent=\v!none]

\protect \endinput
