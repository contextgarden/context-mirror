%D \module
%D   [       file=cont-yes,
%D        version=2012.06.01,
%D          title=\CONTEXT\ Miscellaneous Macros,
%D       subtitle=Startup Stub,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA ADE \& \CONTEXT\ Development Team}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

% At some point I will reconsider the \starttext .. \stoptext
% wraping as we can assume proper styling. It's a left-over from
% mkii that we need to get rid of.

\startluacode

    -- When a style is loaded there is a good change that we never enter
    -- this code.

    local arguments   = environment.arguments

    local jobname     = arguments.jobname or tex.jobname
    local fulljobname = arguments.fulljobname or jobname
    local input       = arguments.input or fulljobname
    local result      = arguments.result or file.removesuffix(jobname)

    local filename    = fulljobname
    local suffix      = file.suffix(filename)

    local filename    = ctxrunner.resolve(filename) -- in case we're prepped

    commands.updatefilenames(jobname,fulljobname,input,result)

    if suffix == "xml" or arguments.forcexml then

        -- Maybe we should move the preamble parsing here as it
        -- can be part of (any) loaded (sub) file. The \starttext
        -- wrapping might go away.

        context.starttext()
        context.xmlprocess("main",filename,"")
        context.stoptext()

    elseif suffix == "cld" or arguments.forcecld then

        context.runfile(filename)

    elseif suffix == "lua" or arguments.forcelua then

        -- The wrapping might go away. Why is is it there in the
        -- first place.

        context.starttext()
        context.ctxlua(string.format('dofile("%s")',filename))
        context.stoptext()

    elseif suffix == "mp" or arguments.forcemp then

        context.starttext()
            context.processMPfigurefile(filename)
        context.stoptext()

 -- elseif suffix == "prep" then
 --
 --     -- Why do we wrap here. Because it can be xml? Let's get rid
 --     -- of prepping in general.
 --
 --     context.starttext()
 --     context.input(filename)
 --     context.stoptext()

    else

        -- We have a regular tex file so no \starttext yet as we can
        -- load fonts.

        context.input(filename)

    end

    context.finishjob()

\stopluacode

\endinput
