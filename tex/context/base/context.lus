if not modules then modules = { } end modules ['context'] = {
    version   = 1.001,
    comment   = "companion to context.mkiv",
    author    = "Hans Hagen, PRAGMA-ADE, Hasselt NL",
    copyright = "PRAGMA ADE / ConTeXt Development Team",
    license   = "see context related readme files"
}

--[[<p>This table specifies what stub files are needed in order to create
the format. These files are loaded before the format is made so that we
bypass kpse. When the format itself is used, another stub is used (with
suffix lui). The current format builder is to a large part determined by
the way luatex evolved and the process will probaby change.</p>]]--

local method = 3

local stubfiles = {

    'luat-cod.lua',

    -- Here follows a list of trac, luat and data files, but we don't
    -- it this way any more so there is no need to keep this updated.

}

-- This method will trigger the creation of a stub file with all neccessary
-- libraries merged. This is how we originally did it.

if method == 1 then

    return stubfiles

end

-- This method will use this file as stub file so no merge is needed.

if method == 2 then

    if resolvers then
        -- we're loading this file in mtxrun
    else

        local sourcepath = string.gsub(arg and arg[1] or "","/[^/]+$","")
        local targetpath = "."

        if sourcepath == "" then sourcepath = targetpath end

        for i=1,#stubfiles do
            local filename = sourcepath .. "/" .. stubfiles[i]
            texio.write_nl("preloading " .. filename)
            dofile(filename)
        end
        texio.write_nl("\n")

    end

    return "context.lus"

end

-- Only a simple stub:

if method == 3 then

    return "luat-cod.lua"

end

-- The last resort.

return stubfiles
