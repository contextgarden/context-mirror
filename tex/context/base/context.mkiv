%D \module
%D   [       file=context,
%D        version=2008.28.10, % 1995.10.10,
%D          title=\CONTEXT,
%D       subtitle=\CONTEXT\ Format Generation,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA / Hans Hagen \& Ton Otten}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

\catcode`\{=1 \catcode`\}=2 \catcode`\#=6

%D From the next string (which is set by the script that assembles the
%D distribution) later on we will calculate a number that can be used
%D by use modules to identify the feature level. Starting with version
%D 2004.8.30 the low level interface is english. Watch out and adapt
%D your styles an modules.

\edef\contextformat {\jobname}
\edef\contextversion{2011.05.18 18:04}

%D For those who want to use this:

\let\fmtname   \contextformat
\let\fmtversion\contextversion

%D Loading:

\edef\mksuffix   {mkiv}
\edef\contextmark{MKIV}

\ifx\normalinput\undefined \let\normalinput\input \fi

\def\loadcorefile#1{\normalinput#1\relax}
\def\loadmarkfile#1{\normalinput#1.\mksuffix\relax}
\def\loadmkiifile#1{}
\def\loadmkivfile#1{\normalinput#1.mkiv\relax}
\def\loadmkvifile#1{\normalinput#1.mkvi\relax}

%D First we load the system modules. These implement a lot of
%D manipulation macros. We start with setting up some basic \TEX\
%D machinery.

\loadmarkfile{syst-ini}

%D Some checking (more primitives are now defined):

\ifdefined\defaultinterface   \else \def\defaultinterface  {english}         \fi
%ifdefined\messageinterface   \else \let\messageinterface  \defaultinterface \fi
\ifdefined\defaultlanguagetag \else \def\defaultlanguagetag{en}              \fi

%D We just quit if new functionality is expected.

\ifnum\luatexversion<60 % also change message
    \writestatus{!!!!}{Your luatex binary is too old, you need at least version 0.60!}
    \expandafter\end
\fi

%D There is only this way to pass the version info
%D to \LUA\ (currently).

\newtoks\contextversiontoks \contextversiontoks\expandafter{\contextversion}

%D Now the more fundamnetal code gets defined.

\loadmarkfile{norm-ctx}
\loadmarkfile{syst-pln}
\loadmarkfile{syst-mes}

\loadmarkfile{luat-cod}
\loadmarkfile{luat-bas}
\loadmarkfile{luat-lib}

\loadmarkfile{catc-ini}
\loadmarkfile{catc-act}
\loadmarkfile{catc-def}
\loadmarkfile{catc-ctx}
\loadmarkfile{catc-sym}

\loadmarkfile{cldf-ini}

% From here on we have \unexpanded being \normalprotected, as we
% already had \unexpanded long before etex came around.

\loadmarkfile{syst-aux}
\loadmarkfile{syst-lua}
\loadmarkfile{syst-con}

\loadmarkfile{syst-fnt}
\loadmarkfile{syst-rtp}

\loadmarkfile{supp-fil}
\loadmarkfile{supp-dir}

\loadmarkfile{char-ini}
\loadmarkfile{char-utf}
\loadmarkfile{char-act}

\loadmarkfile{mult-ini}
%loadmarkfile{mult-fst} % obsolete
\loadmarkfile{mult-sys}
\loadmarkfile{mult-def}
\loadmarkfile{mult-chk}
\loadmarkfile{mult-aux}

\loadmarkfile{cldf-int} % interface

\loadmarkfile{luat-ini}

\loadmarkfile{toks-ini}

\loadmarkfile{attr-ini}

\loadmarkfile{core-var}
\loadmarkfile{core-env}

\loadmarkfile{layo-ini}

\loadmarkfile{node-ini}
\loadmarkfile{node-fin}
\loadmarkfile{node-mig}
\loadmarkfile{node-par}
%loadmarkfile{node-pag}

\loadmarkfile{back-ini}

\loadmarkfile{attr-col}
\loadmarkfile{attr-lay}
\loadmarkfile{attr-neg}
\loadmarkfile{attr-eff}

\loadmarkfile{trac-tex}
\loadmarkfile{trac-deb}

%loadmarkfile{blob-ini} % not to be used, we only use a helper

\loadmarkfile{supp-box}

\loadmarkfile{supp-vis}
\loadmarkfile{supp-fun}

\loadmarkfile{supp-ran}
\loadmarkfile{supp-mat}
\loadmarkfile{supp-ali}
\loadmarkfile{supp-num}

\loadmarkfile{typo-ini}

\loadmarkfile{page-ins}
\loadmarkfile{core-fil}
\loadmarkfile{core-con}

\loadmarkfile{cont-fil}

\loadmarkfile{regi-ini}
\loadmarkfile{enco-ini}
\loadmarkfile{hand-ini}

\loadmarkfile{lang-ini}
\loadmarkfile{lang-lab}

\loadmarkfile{unic-ini}

\loadmarkfile{core-gen}
\loadmarkfile{core-uti}
\loadmarkfile{core-two}

\loadmarkfile{colo-ini}
\loadmarkfile{colo-ext}

\loadmarkfile{node-bck} % overloads anch-pgr (experimental and undocumented)

\loadmarkfile{trac-vis}

\loadmarkfile{lang-mis}
\loadmarkfile{lang-url}
\loadmarkfile{lang-def}
\loadmarkfile{lang-wrd} % can be optional

\loadmarkfile{symb-ini}

\loadmarkfile{sort-ini}

\loadmkvifile{pack-mis}
\loadmarkfile{pack-rul}

\loadmarkfile{lxml-ini}
\loadmarkfile{lxml-sor}

\loadmarkfile{strc-ini}
\loadmarkfile{strc-tag}
\loadmarkfile{strc-doc}
\loadmarkfile{strc-num}
\loadmarkfile{strc-mar}
\loadmarkfile{strc-prc}
\loadmarkfile{strc-sbe}
\loadmarkfile{strc-lst}
\loadmarkfile{strc-sec}
\loadmarkfile{strc-pag} % hm, depends on core-num
\loadmarkfile{strc-ren}
\loadmarkfile{strc-xml}
\loadmarkfile{strc-def} % might happen later
\loadmarkfile{strc-ref}
\loadmarkfile{strc-reg}
\loadmarkfile{strc-lev} % experiment

\loadmarkfile{spac-hor}
\loadmarkfile{spac-ver}
\loadmarkfile{spac-ali}
\loadmarkfile{spac-pag}
\loadmarkfile{spac-fnt}
\loadmarkfile{spac-par}
\loadmarkfile{spac-def}
\loadmarkfile{spac-grd}

\loadmarkfile{anch-pos}

\loadmkvifile{scrn-ini}
\loadmkvifile{scrn-ref}

\loadmarkfile{pack-obj}

\loadmarkfile{strc-itm}
\loadmarkfile{strc-des}
\loadmarkfile{strc-syn}

\loadmarkfile{core-sys}

\loadmarkfile{page-ini}
\loadmarkfile{page-flt}
\loadmarkfile{page-bck}
\loadmarkfile{page-not}
\loadmarkfile{page-one}
\loadmarkfile{page-lay}
\loadmarkfile{page-txt}
\loadmarkfile{page-sid}

\loadmarkfile{strc-flt}

\loadmarkfile{page-mis}
\loadmarkfile{page-mul}
\loadmarkfile{page-set}
\loadmarkfile{pack-lyr}
\loadmarkfile{pack-pos}
\loadmarkfile{page-mak}

\loadmarkfile{page-lin}
\loadmarkfile{page-par}
%loadmarkfile{page-mar} % also commented code in anch-pgr.mkiv
\loadmarkfile{typo-mar}

\loadmarkfile{core-job} % why so late?

\loadmarkfile{buff-ini}
\loadmarkfile{buff-ver}
\loadmarkfile{buff-par}

\loadmarkfile{buff-imp-tex}        % optional as also runtime if not loaded
\loadmarkfile{buff-imp-mp}         % optional as also runtime if not loaded
\loadmarkfile{buff-imp-lua}        % optional as also runtime if not loaded
\loadmarkfile{buff-imp-xml}        % optional as also runtime if not loaded

\loadmarkfile{buff-imp-parsed-xml} % optional
%loadmarkfile{buff-imp-parsed-lua} % optional

\loadmarkfile{strc-blk}

\loadmarkfile{page-imp}
\loadmarkfile{page-sel} % optional
\loadmarkfile{page-com} % optional

\loadmkvifile{scrn-pag}
\loadmkvifile{scrn-wid}
\loadmkvifile{scrn-but}
\loadmkvifile{scrn-bar}

\loadmarkfile{strc-bkm} % bookmarks

\loadmarkfile{tabl-com}
\loadmarkfile{tabl-pln}

\loadmarkfile{tabl-tab} % thrd-tab stripped and merged

\loadmarkfile{tabl-tbl}
\loadmarkfile{tabl-ntb}
\loadmarkfile{tabl-nte}
\loadmarkfile{tabl-ltb}
\loadmarkfile{tabl-tsp}

\loadmarkfile{java-ini}

\loadmkvifile{scrn-fld}
\loadmkvifile{scrn-hlp}

\loadmarkfile{char-enc}
\loadmarkfile{font-ini}
\loadmarkfile{font-unk}
\loadmarkfile{font-tra}
\loadmarkfile{font-uni}
\loadmarkfile{font-col}
\loadmarkfile{font-gds}

\loadmarkfile{blob-ini} % not to be used, we only use a helper

\loadmarkfile{typo-cln}
\loadmarkfile{typo-spa}
\loadmarkfile{typo-krn}
\loadmarkfile{typo-dir}
\loadmarkfile{typo-brk}
\loadmarkfile{typo-cap}
\loadmarkfile{typo-dig}
\loadmarkfile{typo-rep}

\loadmarkfile{type-ini}
\loadmarkfile{type-set}
\loadmarkfile{type-def}
\loadmarkfile{type-lua}

\loadmarkfile{scrp-ini}

\loadmarkfile{prop-ini} % only for downward compatibility

\loadmarkfile{mlib-ctx}

\loadmarkfile{meta-ini}
\loadmarkfile{meta-tex}
\loadmarkfile{meta-fun}
\loadmarkfile{meta-pag}

\loadmarkfile{page-flw}
\loadmarkfile{page-spr}
\loadmarkfile{page-plg}
\loadmarkfile{page-str}

\loadmarkfile{anch-pgr} % overloads tabl-tbl
\loadmarkfile{anch-bar}
\loadmarkfile{anch-snc}

\loadmarkfile{math-ini}
\loadmarkfile{math-pln}
\loadmarkfile{math-for}
\loadmarkfile{math-def}
\loadmarkfile{math-ali}
\loadmarkfile{math-arr}
\loadmarkfile{math-frc}
\loadmarkfile{math-scr}
\loadmarkfile{math-int}
\loadmarkfile{math-del}
\loadmarkfile{math-inl}
\loadmarkfile{math-dis}
\loadmarkfile{math-lan}

\loadmarkfile{strc-mat}

\loadmarkfile{chem-ini}
\loadmarkfile{chem-str}

\loadmarkfile{core-fnt}
\loadmarkfile{node-rul}
\loadmarkfile{node-spl}

\loadmarkfile{strc-not}
\loadmarkfile{strc-lnt}

\loadmarkfile{core-mis}

\loadmarkfile{grph-trf}
\loadmarkfile{grph-inc}
\loadmarkfile{grph-fig}
\loadmarkfile{grph-raw}

\loadmarkfile{pack-box}
\loadmarkfile{pack-bar}
\loadmarkfile{page-app}
\loadmarkfile{meta-fig}

\loadmarkfile{lang-spa} % will become obsolete

\loadmarkfile{bibl-bib}
\loadmarkfile{bibl-tra}

%loadmarkfile{x-xtag}  % no longer preloaded

\loadmarkfile{meta-xml}

\loadmarkfile{cont-log}

\loadmarkfile{task-ini}

\loadmarkfile{cldf-ver} % verbatim, this can come late
\loadmarkfile{cldf-com} % commands, this can come late

\loadmarkfile{core-ctx}

\loadmarkfile{core-ini}
\loadmarkfile{core-def}

%usemodule[x][res-04] % xml resource libraries
%usemodule[x][res-08] % rlx runtime conversion
%usemodule[x][res-12] % rli external indentification

% now we hook in backend code (needs checking)

\loadmarkfile{back-pdf} % actually, this one should load the next three
\loadmarkfile{mlib-pdf}
\loadmarkfile{mlib-pps}
\loadmarkfile{grph-epd}
\loadmarkfile{meta-pdf}

\loadmarkfile{back-exp}

\setupcurrentlanguage[\defaultlanguagetag]

\prependtoks
    \ctxlua{statistics.starttiming(statistics)}%
\to \everyjob

\appendtoks
    \ctxlua{statistics.stoptiming(statistics)}%
\to \everyjob

\appendtoks
    \ctxlua{statistics.savefmtstatus("\jobname","\contextversion","context.mkiv")}% can become automatic
\to \everydump

\errorstopmode \dump \endinput
