%D \module
%D   [       file=grph-trf,
%D        version=2006.08.26, % overhaul/split of 1997.03.31 core-fig
%D          title=\CONTEXT\ Graphic Macros,
%D       subtitle=Transformations,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA ADE \& \CONTEXT\ Development Team}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

\writestatus{loading}{ConTeXt Graphic Macros / Transformations}

\unprotect

%D We probably use too many dimens as the width calculations can
%D go away. Some of this is an inheritance of limited backends
%D (some supported fractions, some 1000's, some dimentions) so
%D we calculate all of them. Nowadays scaling is always available
%D so we could simplify the code. On the other hand, we now get
%D some extra values for free.
%D
%D We could move the calculations to \LUA\ and clean up this
%D lot anyway. On the other hand, there is some danger of messing
%D up so it has a real low priority.

% local:

\newdimen\d_transforms_scale_x_size
\newdimen\d_transforms_scale_y_size
\newdimen\d_transforms_scale_x_offset
\newdimen\d_transforms_scale_y_offset

\newdimen\d_transforms_scale_h_size
\newdimen\d_transforms_scale_v_size

\newconditional\c_transforms_scale_done
\newconditional\c_transforms_scale_scaling_done

\newdimen\d_transforms_scale_wd
\newdimen\d_transforms_scale_ht
\newdimen\d_transforms_scale_dp

% global

\newdimen\d_transforms_scale_used_x_size
\newdimen\d_transforms_scale_used_y_size

\newcount\c_transforms_scale_used_x_scale
\newcount\c_transforms_scale_used_y_scale

\newdimen\d_transforms_scale_outer_v_size % we cannot manipulate any global vsize !

% scratch:

\let\m_transforms_scale_temp  \empty
\let\m_transforms_scale_temp_x\empty
\let\m_transforms_scale_temp_y\empty

% public:

\let\finalscaleboxxscale \!!plusone
\let\finalscaleboxyscale \!!plusone
\let\finalscaleboxwidth  \!!zeropoint
\let\finalscaleboxheight \!!zeropoint
\let\finalscaleboxxfactor\!!hundred
\let\finalscaleboxyfactor\!!hundred

% we can let sx/sy win (first check)

\installcommandhandler \??xy {scale} \??xy % we can have instances

\setupscale
  [\c!sx=1,
   \c!sy=1,
  %\c!scale=,
  %\c!xscale=,
  %\c!yscale=,
  %\c!width=,
  %\c!height=,
  %\c!lines=,
  %\c!factor=,
  %\c!hfactor=,
  %\c!wfactor=,
  %\c!grid=,
  %\c!equalwidth=,
  %\c!equalheight=,
   \c!maxwidth=\scaleparameter\c!width,
   \c!maxheight=\scaleparameter\c!height]

\unexpanded\def\scale{\dodoubleempty\transforms_scale}

% we could have: \freezeparameter\c!scale etc (less backtracking when used multiple)

\def\transforms_scale[#1][#2]%
  {\bgroup
   % this is quite common so we might make this a helper
   \ifsecondargument
     \edef\currentscale{#1}%
     \setupcurrentscale[#2]%
   \else\iffirstargument
     \doifassignmentelse{#1}
       {\let\currentscale\empty
        \setupcurrentscale[#1]}
       {\edef\currentscale{#1}}%
   \else
     \let\currentscale\empty
   \fi\fi
   %
   \dowithnextboxcs\transforms_scale_finish\hbox}

\def\transforms_scale_finish
  {%
   \edef\p_scale      {\scaleparameter\c!scale      }%
   \edef\p_xscale     {\scaleparameter\c!xscale     }%
   \edef\p_yscale     {\scaleparameter\c!yscale     }%
   \edef\p_width      {\scaleparameter\c!width      }%
   \edef\p_height     {\scaleparameter\c!height     }%
   \edef\p_depth      {\scaleparameter\c!depth      }%
   \edef\p_lines      {\scaleparameter\c!lines      }%
   \edef\p_factor     {\scaleparameter\c!factor     }%
   \edef\p_hfactor    {\scaleparameter\c!hfactor    }%
   \edef\p_wfactor    {\scaleparameter\c!wfactor    }%
 % \edef\p_grid       {\scaleparameter\c!grid       }% used once
   \edef\p_maxwidth   {\scaleparameter\c!maxwidth   }%
   \edef\p_maxheight  {\scaleparameter\c!maxheight  }%
   \edef\p_sx         {\scaleparameter\c!sx         }%
   \edef\p_sy         {\scaleparameter\c!sy         }%
   \edef\p_equalwidth {\scaleparameter\c!equalwidth }%
   \edef\p_equalheight{\scaleparameter\c!equalheight}%
   %
   \d_transforms_scale_dp\dp\nextbox
   \ifx\p_depth\v!no \ifzeropt\d_transforms_scale_dp \else
     \setbox\nextbox\hbox{\raise\d_transforms_scale_dp\box\nextbox}% new
     \d_transforms_scale_dp\dp\nextbox
   \fi \fi
   \d_transforms_scale_wd\wd\nextbox
   \d_transforms_scale_ht\ht\nextbox
   \d_transforms_scale_dp\dp\nextbox
   %
   \global\let\finalscaleboxxscale \!!plusone
   \global\let\finalscaleboxyscale \!!plusone
   \xdef      \finalscaleboxwidth {\the\d_transforms_scale_wd}%
   \xdef      \finalscaleboxheight{\the\d_transforms_scale_ht}%
   \global\let\finalscaleboxxfactor\!!hundred
   \global\let\finalscaleboxyfactor\!!hundred
   %
   \forgetall
   \dontshowcomposition
   \dontcomplain
   %
   \setfalse\c_transforms_scale_done
   \transforms_scale_calculate
   \ifconditional\c_transforms_scale_done
     \transforms_scale_apply
   \fi
   \transforms_scale_position
   %
   \box\nextbox
   \egroup}

\def\transforms_scale_apply
  {\d_transforms_scale_wd\finalscaleboxxscale\d_transforms_scale_wd
   \d_transforms_scale_ht\finalscaleboxyscale\d_transforms_scale_ht
   \d_transforms_scale_dp\finalscaleboxyscale\d_transforms_scale_dp
   \setbox\nextbox\hbox
     {\dostartscaling \finalscaleboxxscale \finalscaleboxyscale
      \smashedbox\nextbox
      \dostopscaling}%
   \wd\nextbox\d_transforms_scale_wd
   \ht\nextbox\d_transforms_scale_ht
   \dp\nextbox\d_transforms_scale_dp}

\def\m_transforms_scale_stamp_c{11}

\def\transforms_scale_calculate
  {\ifdim\d_transforms_scale_ht>\zeropoint \ifdim\d_transforms_scale_wd>\zeropoint
     \edef\m_transforms_scale_stamp_a{\p_scale\p_xscale\p_yscale\p_factor\p_wfactor\p_hfactor\p_lines\p_width\p_height}%
     \edef\m_transforms_scale_stamp_b{\p_sx\p_sy}%
     \ifx\m_transforms_scale_stamp_a\empty
       \ifx\m_transforms_scale_stamp_b\m_transforms_scale_stamp_c
         % no scaling, don't change this (previous attempts failed anyway)
         \insidefloattrue % trick
         \transforms_scale_calculations_yes
       \else
         \transforms_scale_check_sx_sy
         \transforms_scale_calculations_nop
       \fi
     \else
       \ifx\m_transforms_scale_stamp_b\empty
         % no need to check further
       \else
         \transforms_scale_check_sx_sy
       \fi
       \transforms_scale_calculations_yes
     \fi
   \fi \fi}

\def\transforms_scale_check_sx_sy
  {\ifdim\p_sx\onepoint=\onepoint\else\edef\p_width {\the\dimexpr\p_sx\d_transforms_scale_wd}\fi
   \ifdim\p_sy\onepoint=\onepoint\else\edef\p_height{\the\dimexpr\p_sy\d_transforms_scale_ht}\fi}

\def\transforms_scale_rounded#1%
  {\expandafter\expandafter\expandafter\transforms_scale_rounded_indeed
     \expandafter\WITHOUTPT\the\dimexpr#1\points*100+32768sp\relax.\relax}

\def\transforms_scale_rounded_indeed#1.#2\relax{#1}

\def\transforms_scale_calculations_nop
  {\settrue\c_transforms_scale_done
   \xdef\finalscaleboxwidth {\the\dimexpr\p_sx\d_transforms_scale_wd\relax}%
   \xdef\finalscaleboxheight{\the\dimexpr\p_sy\d_transforms_scale_ht\relax}%
   \glet\finalscaleboxxscale\p_sx
   \glet\finalscaleboxyscale\p_sy
   \ifx\finalscaleboxxscale\empty\let\finalscaleboxxscale\!!plusone\fi
   \ifx\finalscaleboxyscale\empty\let\finalscaleboxyscale\!!plusone\fi
   \xdef\finalscaleboxxfactor{\transforms_scale_rounded\finalscaleboxxscale}%
   \xdef\finalscaleboxyfactor{\transforms_scale_rounded\finalscaleboxyscale}}

\def\transforms_scale_calculations_yes
  {\settrue\c_transforms_scale_done
   % initial values
   \d_transforms_scale_x_offset\zeropoint
   \d_transforms_scale_y_offset\zeropoint
   \d_transforms_scale_x_size  \d_transforms_scale_wd
   \d_transforms_scale_y_size  \d_transforms_scale_ht % alleen ht wordt geschaald!
   % final values
   \global\d_transforms_scale_used_x_size \zeropoint % see note * (core-fig)
   \global\d_transforms_scale_used_y_size \zeropoint % see note * (core-fig)
   \c_transforms_scale_used_x_scale   \plusone        % see note * (core-fig)
   \c_transforms_scale_used_y_scale   \plusone        % see note * (core-fig)
   % preparations
   \setfalse\c_transforms_scale_scaling_done
   \transforms_scale_check_parameters
   % calculators
   % beware, they operate in sequence, and calculate missing dimensions / messy
   %setscaleboxbynature % when? needed?
   \ifconditional\c_transforms_scale_scaling_done\else\transforms_scale_by_factor   \fi
   \ifconditional\c_transforms_scale_scaling_done\else\transforms_scale_by_scale    \fi
   \ifconditional\c_transforms_scale_scaling_done\else\transforms_scale_by_dimension\fi
   % finalizers / to be done (no longer needed this way, clean up)
   \transforms_scale_convert_large_scale\d_transforms_scale_h_size\figx\c_transforms_scale_used_x_scale\m_transforms_scale_temp_x
   \transforms_scale_convert_large_scale\d_transforms_scale_v_size\figy\c_transforms_scale_used_y_scale\m_transforms_scale_temp_y
   % used in actual scaling
   \xdef\finalscaleboxwidth  {\the\d_transforms_scale_used_x_size}%
   \xdef\finalscaleboxheight {\the\d_transforms_scale_used_y_size}%
   \xdef\finalscaleboxxfactor{\the\c_transforms_scale_used_x_scale}%
   \xdef\finalscaleboxyfactor{\the\c_transforms_scale_used_y_scale}%
   \xdef\finalscaleboxxscale {\withoutpt\the\dimexpr\m_transforms_scale_temp_x\points/\plushundred\relax}%
   \xdef\finalscaleboxyscale {\withoutpt\the\dimexpr\m_transforms_scale_temp_y\points/\plushundred\relax}}

\setvalue{\??xy:\c!grid:\v!yes     }{\getnoflines   \d_transforms_scale_used_y_size\edef\p_height{\the\noflines\lineheight}}
\setvalue{\??xy:\c!grid:\v!height  }{\getrawnoflines\d_transforms_scale_used_y_size\edef\p_height{\the\dimexpr\noflines\lineheight+\strutdepth}}
\setvalue{\??xy:\c!grid:\v!depth   }{\getrawnoflines\d_transforms_scale_used_y_size\edef\p_height{\the\dimexpr\noflines\lineheight-\strutdepth}}
\setvalue{\??xy:\c!grid:\v!halfline}{\getrawnoflines\d_transforms_scale_used_y_size\edef\p_height{\the\dimexpr\noflines\lineheight+.5\lineheight}}
\setvalue{\??xy:\c!grid:\v!fit     }{\getrawnoflines\d_transforms_scale_used_y_size\edef\p_height{\the\noflines\lineheight}}
\letvalue{\??xy:\c!grid:\empty     }\donothing

\def\transforms_scale_check_parameters % resolve self referencing loops
  {\ifx\p_maxwidth \empty\else \edef\p_maxwidth {\the\dimexpr\p_maxwidth        }\fi
   \ifx\p_maxheight\empty\else \edef\p_maxheight{\the\dimexpr\p_maxheight       }\fi
   \ifx\p_lines    \empty\else \edef\p_height   {\the\dimexpr\p_lines\lineheight}\fi
   \getvalue{\??xy:\c!grid:\scaleparameter\c!grid}}

\def\transforms_scale_by_nature % where ! ! ! ! !
  {\ifx\p_width \empty\else \global\d_transforms_scale_used_x_size\p_width \fi
   \ifx\p_height\empty\else \global\d_transforms_scale_used_y_size\p_height\fi
   \ifx\p_scale \empty\else        \c_transforms_scale_used_x_scale\p_scale
                                   \c_transforms_scale_used_y_scale\p_scale \fi
   \ifx\p_xscale\empty\else        \c_transforms_scale_used_x_scale\p_xscale\fi
   \ifx\p_yscale\empty\else        \c_transforms_scale_used_y_scale\p_yscale\fi}

% \defineexternalfigure[width-6][factor=auto,maxwidth=\textheight,maxheight=\textwidth]
% \defineexternalfigure[width-7][factor=auto,maxwidth=\textwidth,maxheight=\textheight]
% \placefigure{none}{\rotate[frame=on,offset=overlay]{\externalfigure[t:/sources/cow.pdf][width-6]}} \page
% \placefigure{none}{\framed[frame=on,offset=overlay]{\externalfigure[t:/sources/cow.pdf][width-7]}}

\def\m_transforms_scale_factor_set{\v!max,\v!fit,\v!broad,\v!auto} % can be an \edef

\def\transforms_scale_by_factor
  {\doifinsetelse\p_factor\m_transforms_scale_factor_set
     \transforms_scale_by_factor_a
     {\doifinsetelse\p_hfactor\m_transforms_scale_factor_set
        \transforms_scale_by_factor_b
        {\doifinsetelse\p_wfactor\m_transforms_scale_factor_set
           \transforms_scale_by_factor_c
           \transforms_scale_by_factor_d}}}

\def\transforms_scale_by_factor_a
  {\transforms_scale_apply_size
   \ifdim\d_transforms_scale_x_size>\d_transforms_scale_y_size
     \transforms_scale_calculate_norm  \d_transforms_scale_used_x_size\p_factor\p_maxwidth\hsize\d_transforms_scale_h_size
     \transforms_scale_calculate_scales\d_transforms_scale_used_x_size\d_transforms_scale_x_size\d_transforms_scale_used_y_size\d_transforms_scale_y_size
   \else
     \transforms_scale_calculate_norm  \d_transforms_scale_used_y_size\p_factor\p_maxheight\d_transforms_scale_outer_v_size\d_transforms_scale_v_size
     \transforms_scale_calculate_scales\d_transforms_scale_used_y_size\d_transforms_scale_y_size\d_transforms_scale_used_x_size\d_transforms_scale_x_size
   \fi
   \transforms_scale_by_factor_indeed}

\def\transforms_scale_by_factor_b
  {\transforms_scale_apply_size
   \transforms_scale_calculate_norm  \d_transforms_scale_used_y_size\p_hfactor\p_maxheight\d_transforms_scale_outer_v_size\d_transforms_scale_v_size
   \transforms_scale_calculate_scales\d_transforms_scale_used_y_size\d_transforms_scale_y_size\d_transforms_scale_used_x_size\d_transforms_scale_x_size
   \transforms_scale_by_factor_indeed}

\def\transforms_scale_by_factor_c
  {\transforms_scale_apply_size
   \transforms_scale_calculate_norm  \d_transforms_scale_used_x_size\p_wfactor\p_maxwidth\hsize\d_transforms_scale_h_size
   \transforms_scale_calculate_scales\d_transforms_scale_used_x_size\d_transforms_scale_x_size\d_transforms_scale_used_y_size\d_transforms_scale_y_size
   \transforms_scale_by_factor_indeed}

\def\transforms_scale_by_factor_d
  {\transforms_scale_calculate_norm\d_transforms_scale_used_y_size\p_factor \p_height \textheight\d_transforms_scale_v_size
   \transforms_scale_calculate_norm\d_transforms_scale_used_y_size\p_hfactor\p_height \textheight\d_transforms_scale_v_size
   \transforms_scale_calculate_norm\d_transforms_scale_used_x_size\p_wfactor\p_width  \hsize     \hsize}

\def\transforms_scale_by_factor_indeed
  {\settrue\c_transforms_scale_scaling_done
   \ifdim\d_transforms_scale_used_x_size>\d_transforms_scale_h_size
     \global\d_transforms_scale_used_y_size\zeropoint
     \global\d_transforms_scale_used_x_size\d_transforms_scale_h_size
   \else\ifdim\d_transforms_scale_used_y_size>\d_transforms_scale_v_size
     \global\d_transforms_scale_used_x_size\zeropoint
     \global\d_transforms_scale_used_y_size\d_transforms_scale_v_size
   \fi\fi
   \transforms_scale_by_dimension}

\def\transforms_scale_by_scale
  {\edef\m_transforms_scale_temp{\p_scale\p_xscale\p_yscale}%
   \ifx\m_transforms_scale_temp\empty \else
     \transforms_scale_apply_scale\d_transforms_scale_used_x_size\d_transforms_scale_x_size\c_transforms_scale_used_x_scale\p_xscale
     \transforms_scale_apply_scale\d_transforms_scale_used_y_size\d_transforms_scale_y_size\c_transforms_scale_used_y_scale\p_yscale
     \global\d_transforms_scale_used_x_size\zeropoint
     \global\d_transforms_scale_used_y_size\zeropoint
     \ifx\p_maxwidth\empty
       \ifx\p_maxheight\empty
       \else
         \ifdim\d_transforms_scale_y_size>\p_maxheight\relax
           \global\d_transforms_scale_used_y_size\p_maxheight
         \fi
       \fi
     \else
       \ifdim\d_transforms_scale_x_size>\p_maxwidth\relax
          \global\d_transforms_scale_used_x_size\p_maxwidth
       \fi
     \fi
   \fi}

\def\transforms_scale_by_dimension
  {\ifdim\d_transforms_scale_used_x_size>\zeropoint
     \ifdim\d_transforms_scale_used_y_size>\zeropoint
       \transforms_scale_by_dimension_a
     \else
       \transforms_scale_by_dimension_b
     \fi
   \else
     \ifdim\d_transforms_scale_used_y_size>\zeropoint
       \transforms_scale_by_dimension_c
     \else
       \transforms_scale_by_dimension_d
     \fi
   \fi}

\def\transforms_scale_by_dimension_a
  {\transforms_scale_by_dimension_indeed
     {\transforms_scale_calculate_scale\d_transforms_scale_used_y_size\d_transforms_scale_y_size\c_transforms_scale_used_y_scale
      \transforms_scale_calculate_scale\d_transforms_scale_used_x_size\d_transforms_scale_x_size\c_transforms_scale_used_x_scale}%
     {\transforms_scale_calculate_scale\d_transforms_scale_used_y_size\d_transforms_scale_y_size\c_transforms_scale_used_y_scale
      \transforms_scale_calculate_scale\d_transforms_scale_used_x_size\d_transforms_scale_x_size\c_transforms_scale_used_x_scale}%
     {\transforms_scale_calculate_scale\d_transforms_scale_used_y_size\d_transforms_scale_y_size\c_transforms_scale_used_y_scale
      \transforms_scale_calculate_scale\d_transforms_scale_used_x_size\d_transforms_scale_x_size\c_transforms_scale_used_x_scale}}

\def\transforms_scale_by_dimension_b
  {\transforms_scale_by_dimension_indeed
     {\transforms_scale_calculate_scales\d_transforms_scale_used_x_size\d_transforms_scale_x_size\d_transforms_scale_used_y_size\d_transforms_scale_y_size}%
     {\transforms_scale_calculate_scales\d_transforms_scale_used_x_size\d_transforms_scale_x_size\d_transforms_scale_used_y_size\d_transforms_scale_y_size}%
     {\transforms_scale_calculate_scales\d_transforms_scale_used_x_size\d_transforms_scale_x_size\d_transforms_scale_used_y_size\d_transforms_scale_y_size}}

\def\transforms_scale_by_dimension_c
  {\transforms_scale_by_dimension_indeed
     {\transforms_scale_calculate_scales\d_transforms_scale_used_y_size\d_transforms_scale_y_size\d_transforms_scale_used_x_size\d_transforms_scale_x_size}%
     {\transforms_scale_calculate_scales\d_transforms_scale_used_y_size\d_transforms_scale_y_size\d_transforms_scale_used_x_size\d_transforms_scale_x_size}%
     {\transforms_scale_calculate_scales\d_transforms_scale_used_y_size\d_transforms_scale_y_size\d_transforms_scale_used_x_size\d_transforms_scale_x_size}}

\def\transforms_scale_by_dimension_d
  {\transforms_scale_by_dimension_indeed
     {\transforms_scale_apply_scale\d_transforms_scale_used_x_size\d_transforms_scale_x_size\c_transforms_scale_used_x_scale\p_xscale
      \transforms_scale_apply_scale\d_transforms_scale_used_y_size\d_transforms_scale_y_size\c_transforms_scale_used_y_scale\p_yscale}%
     {\transforms_scale_calculate_scales\d_transforms_scale_used_x_size\d_transforms_scale_x_size\d_transforms_scale_used_y_size\d_transforms_scale_y_size}%
     {\transforms_scale_calculate_scales\d_transforms_scale_used_y_size\d_transforms_scale_y_size\d_transforms_scale_used_x_size\d_transforms_scale_x_size}}

\def\transforms_scale_by_dimension_indeed#1#2#3%
  {#1\relax
   \ifx\p_maxwidth\empty \else
     \ifdim\d_transforms_scale_used_x_size>\p_maxwidth\relax
       \global\d_transforms_scale_used_x_size\p_maxwidth
       #2\relax
     \fi
   \fi
   \ifx\p_maxheight\empty \else
     \ifdim\d_transforms_scale_used_y_size>\p_maxheight\relax
       \global\d_transforms_scale_used_y_size\p_maxheight
        #3\relax
     \fi
   \fi}

\def\transforms_scale_calculate_norm#1#2% todo: swap 1 and 2 and pass one less
  {\csname\??ef:n:\ifcsname\??ef:n:#2\endcsname#2\else\s!unknown\fi\endcsname#1#2}

\setvalue{\??ef:n:\v!max    }#1#2#3#4#5{\global#1#4}
\setvalue{\??ef:n:\v!fit    }#1#2#3#4#5{\global#1#5}
\setvalue{\??ef:n:\v!broad  }#1#2#3#4#5{\global#1\dimexpr#5-4\@@exbodyfont\relax}
\setvalue{\??ef:n:\s!unknown}#1#2#3#4#5{\global#1\dimexpr#2\dimexpr\@@exbodyfont/10\relax\relax} % brr ex
\setvalue{\??ef:n:\v!auto   }#1#2#3#4#5{\ifx#3\empty\else\global#1#3\fi}
\setvalue{\??ef:n:\empty    }#1#2#3#4#5{\ifx#3\empty\else\global#1#3\fi}
\setvalue{\??ef:n:\s!default}#1#2#3#4#5{\ifx#3\empty\else\global#1#3\fi}

\def\transforms_scale_calculate_scales#1#2#3#4%
  {\scratchdimen\dimexpr#1/\dimexpr#2/\plusthousand\relax\relax
   \c_transforms_scale_used_x_scale\scratchdimen
   \c_transforms_scale_used_y_scale\scratchdimen
   #3\dimexpr\c_transforms_scale_used_x_scale\dimexpr#4/\plusthousand\relax\relax}

\def\transforms_scale_calculate_scale#1#2#3%
  {#3\dimexpr#1/\dimexpr#2/\plusthousand\relax\relax}

\def\transforms_scale_apply_scale#1#2#3#4% #4 = parameter / scale can be empty
  {\ifcase0#4\relax
     \ifcase0\p_scale\relax
       #3=\plusthousand
     \else
       #3=\p_scale
     \fi
   \else
     #3=#4%
   \fi
   \relax % important ! still ?
   \global#1\ifnum#3=\plusthousand#2\else\dimexpr#3\dimexpr#2/\plusthousand\relax\relax\fi
   \relax}

\def\transforms_scale_apply_size
  {\ifx\p_maxheight\empty
     \d_transforms_scale_outer_v_size\textheight
     \ifinner
       \d_transforms_scale_outer_v_size \vsize % \textheight =\vsize
       \scratchdimen\vsize % \scratchdimen=\textheight
     \else\ifinsidefloat
       \d_transforms_scale_outer_v_size \vsize % \textheight =\vsize
       \scratchdimen\vsize % \scratchdimen=\textheight
     \else\ifinpagebody
       \d_transforms_scale_outer_v_size \vsize % \textheight =\vsize
       \scratchdimen\vsize % \scratchdimen=\textheight
     \else % hm, there should be an option to force this
       \ifdim\pagegoal<\maxdimen
         \ifdim\pagetotal<\pagegoal
           \scratchdimen\dimexpr\pagegoal-\pagetotal\relax
         \else
           \scratchdimen\d_transforms_scale_outer_v_size % \textheight
         \fi
       \else
         \scratchdimen\d_transforms_scale_outer_v_size % \textheight
       \fi
     \fi\fi\fi
   \else
     \scratchdimen\p_maxheight
     \d_transforms_scale_outer_v_size\scratchdimen
   \fi
   \ifx\p_height\empty
     \d_transforms_scale_v_size\scratchdimen
   \else
     \d_transforms_scale_v_size\p_height
   \fi
   \ifx\p_width\empty
     \d_transforms_scale_h_size\hsize
   \else
     \d_transforms_scale_h_size\p_width
   \fi}

\def\transforms_scale_convert_large_scale#1#2#3#4%
  {\scratchdimen#1\relax
   \ifnum#3=\plusthousand
     % == scale 1
   \else
     % better 1000 100 10 ranges, evt round 2sp
     \divide\scratchdimen \plusthousand
     \multiply\scratchdimen #3\relax
   \fi
   \scratchdimen-\scratchdimen  % beter hier - dan in driver
   \edef#2{\the\scratchdimen}%
   \scratchcounter#3\relax
   \ifnum\scratchcounter>\plustenthousand
     \divide\scratchcounter\plusten
     \scratchdimen\the\scratchcounter\points
   \else
     \scratchdimen\the\scratchcounter\points
     \divide\scratchdimen\plusten
   \fi
   \edef#4{\withoutpt\the\scratchdimen}}

% \startcombination
%     {\externalfigure[cow.pdf] [frame=on,height=3cm,equalwidth=6cm]} {}
%     {\externalfigure[mill.png][frame=on,height=3cm,equalwidth=6cm]} {}
% \stopcombination

\def\transforms_scale_position
  {\ifx\p_equalwidth\empty \else
    \scratchdimen\p_equalwidth\relax
    \ifdim\d_transforms_scale_wd<\scratchdimen
      \setbox\nextbox\hbox to \scratchdimen{\hss\box\nextbox\hss}%
    \fi
   \fi
   \ifx\p_equalheight\empty \else
     \scratchdimen\p_equalheight\relax
     \ifdim\d_transforms_scale_ht<\scratchdimen
       \setbox\nextbox\vbox to \scratchdimen{\vss\box\nextbox\vss}%
     \fi
   \fi}

\unexpanded\def\fastscale#1%
  {\ifnum#1=1000\relax
     \expandafter\transforms_fast_scale_nop
   \else
     \expandafter\transforms_fast_scale_yes
   \fi{#1}}

\def\transforms_fast_scale_nop#1%
  {\hbox}

\def\transforms_fast_scale_yes#1%
  {\edef\finalscaleboxxscale{\withoutpt\the\dimexpr#1pt/1000\relax}%
   \let\finalscaleboxyscale\finalscaleboxxscale
   \dowithnextboxcs\transforms_fast_scale_finish\hbox}

\def\transforms_fast_scale_finish
  {\transforms_scale_apply
   \box\nextbox
   \endgroup}

%D \macros
%D   {clip, setupclipping}
%D
%D Although related to figures, clipping can be applied to
%D arbitrary content. We can use \METAPOST\ to provide a non
%D rectangular clipping path.
%D
%D \starttyping
%D \startMPclip{fun}
%D   clip currentpicture to fullcircle
%D     shifted (.5,.5) xscaled \width yscaled \height ;
%D \stopMPclip
%D \stoptyping
%D
%D We get a rectangular piece of the figure when we say:
%D
%D \starttyping
%D \clip[x=2,y=1]{\externalfigure[photo]}
%D \stoptyping
%D
%D When we want to clip to the oval we defined a few lines ago,
%D we say:
%D
%D \starttyping
%D \clip[nx=1,ny=1,x=1,y=1,mp=fun]{\externalfigure[photo]}
%D \stoptyping
%D
%D The general characteristics of clipping can be set up with
%D
%D \showsetup{setupclipping}

\unexpanded\def\setupclipping
  {\dodoubleargument\getparameters[\??cp]}

\unexpanded\def\clip
  {\dosingleempty\transforms_clip}

\def\transforms_clip[#1]% nb top->bottom left->right
  {\bgroup
   \iffirstargument
     \getparameters[\??cp][#1]%
   \fi
   \dowithnextboxcs\transforms_clip_finish\hbox}

\def\transforms_clip_finish
  {\doifelse\@@cpstate\v!start
     \transforms_clip_yes_finish
     \transforms_clip_nop_finish}

\def\transforms_clip_yes_finish
  {\ifdim\@@cpwidth>\zeropoint
     \!!dimena\@@cpwidth
     \!!dimenc\@@cphoffset
   \else
     \!!dimena\wd\nextbox
     \divide\!!dimena \@@cpnx
     \!!dimenc\@@cpx\!!dimena
     \advance\!!dimenc -\!!dimena
     \!!dimena\@@cpsx\!!dimena
   \fi
   \relax % sure
   \ifdim\@@cpheight>\zeropoint
     \!!dimenb\@@cpheight
     \!!dimend\ht\nextbox
     \advance\!!dimend -\@@cpvoffset
     \advance\!!dimend -\!!dimenb
   \else
     \!!dimenb\ht\nextbox
     \divide\!!dimenb \@@cpny
     \!!dimend-\@@cpy\!!dimenb
     \advance\!!dimend -\@@cpsy\!!dimenb
     \advance\!!dimend \!!dimenb
     \!!dimenb\@@cpsy\!!dimenb
     \advance\!!dimend \ht\nextbox % dimend !
   \fi
   \setbox\nextbox\hbox                            % old
     {\advance\!!dimenc -\@@cpleftoffset           % new !
      \advance\!!dimend -\@@cpbottomoffset         % new ! % - added
      \hskip-\!!dimenc\lower\!!dimend\flushnextbox}% old
   \wd\nextbox\zeropoint
   \ht\nextbox\zeropoint
   \dp\nextbox\zeropoint
   \setbox\nextbox\hbox
     {\advance\!!dimena \@@cpleftoffset         % new !
      \advance\!!dimena \@@cprightoffset        % new !
      \advance\!!dimenb \@@cpbottomoffset       % new !
      \advance\!!dimenb \@@cptopoffset          % new !
      \dostartclipping\@@cpmp\!!dimena\!!dimenb % old
        \box\nextbox
      \dostopclipping}%
   \setbox\nextbox\hbox                       % new !
     {\!!dimena-\@@cpleftoffset               % new !
      \!!dimenb \@@cpbottomoffset             % new ! % - removed
      \hskip\!!dimena\lower\!!dimenb\flushnextbox}% new !
   \wd\nextbox\!!dimena
   \ht\nextbox\!!dimenb
   \dp\nextbox\zeropoint
   \box\nextbox
   \egroup}

\def\transforms_clip_nop_finish
  {\box\nextbox
   \egroup}

\setupclipping
  [\c!state=\v!start,
   \c!n=1, % was 2
   \c!nx=\@@cpn,\c!x=1,\c!sx=1,
   \c!ny=\@@cpn,\c!y=1,\c!sy=1,
   \c!width=\!!zeropoint,
   \c!height=\!!zeropoint,
   \c!hoffset=\!!zeropoint,
   \c!voffset=\!!zeropoint,
   \c!offset=\zeropoint,
   \c!leftoffset=\@@cpoffset,  % \zeropoint,
   \c!rightoffset=\@@cpoffset, % \zeropoint,
   \c!topoffset=\@@cpoffset,   % \zeropoint,
   \c!bottomoffset=\@@cpoffset,% \zeropoint,
   \c!mp=]

%D \startbuffer
%D \startuseMPgraphic{test}
%D   path p ; p := fullcircle scaled 4cm ;
%D   draw p withpen pencircle scaled 1cm ;
%D   setbounds currentpicture to boundingbox p ;
%D \stopuseMPgraphic
%D
%D \hbox to \hsize \bgroup
%D   \hss
%D   \ruledhbox{\useMPgraphic{test}}%
%D   \hss
%D   \ruledhbox{\clip{\useMPgraphic{test}}}%
%D   \hss
%D \egroup
%D \stopbuffer
%D
%D \typebuffer \getbuffer

%D Mirroring.

\unexpanded\def\mirror
  {\bgroup
   \dowithnextboxcs\transforms_mirror_finish\hbox}

\def\transforms_mirror_finish
  {\dontshowcomposition
   \scratchdimen\wd\nextbox
   % better use an hbox (if no \forgetall, leftskip etc may creep in)
   %\setbox\nextbox\vbox{\forgetall\dostartmirroring\hskip-\wd\nextbox\flushnextbox\dostopmirroring}%
   \setbox\nextbox\hbox{\dostartmirroring\hskip-\wd\nextbox\flushnextbox\dostopmirroring}%
   \wd\nextbox\scratchdimen
   \box\nextbox
   \egroup}

\protect \endinput
