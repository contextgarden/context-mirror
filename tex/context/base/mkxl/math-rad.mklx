%D \module
%D   [       file=math-rad,
%D        version=2013.07.13,
%D          title=\CONTEXT\ Math Macros,
%D       subtitle=Radicals,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA ADE \& \CONTEXT\ Development Team}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

\writestatus{loading}{ConTeXt Math Macros / Radicals}

\unprotect

%D \starttyping
%D $\sqrt[3]{10}$
%D \stoptyping
%D
%D This root command will be overloaded later:

%D Old stuff:

% \def\rootradical{\Uroot    0 "221A } % can be done in char-def
% \def\surdradical{\Uradical 0 "221A } % can be done in char-def

\permanent\protected\def\root#1\of{\rootradical{#1}} % #2

\protected\def\sqrt{\doifelsenextoptionalcs\rootwithdegree\rootwithoutdegree} % will be redefined

% \permanent\protected\def\styledrootradical#1#2% so that \text works ok ... \rootradical behaves somewhat weird
%   {\normalexpanded{\math_radical_common
%      {\normalunexpanded{#1}}%
%      {\noexpand\triggermathstyle{\number\normalmathstyle}%
%       \normalunexpanded{#2}}}}

% experimental new keyword: (maybe keywords should come after the symbol)
%
% \permanent\protected\def\styledrootradical#1#2% so that \text works ok ... \rootradical behaves somewhat weird
%   {\Uroot style \normalmathstyle "0 "221A {#1}{#2}}

\permanent\protected\def\rootwithdegree[#1]{\math_radical_common{#1}}
\permanent\protected\def\rootwithoutdegree {\math_radical_common  {}}

%D Even older stuff:

% % is now a ordinary character
%
% \let\normalsurd\surd % \Uradical "0 "221A
% \permanent\protected\def\surd{\normalsurd{}}

%D The real thing. If needed one can control matters with one of the many
%D \type {\Umath...} parameters.
%D
%D \starttyping
%D \def\R {\Umathradicaldegreeafter\textstyle0pt}
%D \def\RR{\Umathradicaldegreeafter\textstyle\dimexpr
%D    \Umathradicaldegreeafter\textstyle+.1em\relax}
%D \def\RRR{\frozen\Umathradicaldegreeafter\textstyle\dimexpr
%D    \Umathradicaldegreeafter\textstyle+.2em\relax}
%D
%D $    \sqrt[3]{5}   \RR\sqrt[3]{5}  \sqrt[3]{5} $\par
%D $    \sqrt[3]{5} {\RRR\sqrt[3]{5}} \sqrt[3]{5} $\par
%D $ \RR\sqrt[3]{5} {\RRR\sqrt[3]{5}} \sqrt[3]{5} $\par
%D
%D \def\R  {\Umathradicaldegreeafter\textstyle
%D            0pt}
%D \def\RR {\Umathradicaldegreeafter\textstyle
%D            0.95\Umathradicaldegreeafter\textstyle}
%D \def\RRR{\frozen\Umathradicaldegreeafter\textstyle
%D            0.9\Umathradicaldegreeafter\textstyle}
%D
%D $    \sqrt[3]{5}   \RR\sqrt[3]{5}  \sqrt[3]{5} $\par
%D $    \sqrt[3]{5} {\RRR\sqrt[3]{5}} \sqrt[3]{5} $\par
%D $ \RR\sqrt[3]{5} {\RRR\sqrt[3]{5}} \sqrt[3]{5} $\par
%D
%D \def\RR {\mathopenupparameter\Umathradicaldegreeafter{.1}}
%D
%D $ \sqrt[3]{5}  \RR\sqrt[3]{5}  \sqrt[3]{5} $\par
%D $ \sqrt[3]{5} {\RR\sqrt[3]{5}} \sqrt[3]{5} $\par
%D \stoptyping

\installcorenamespace{mathradical}
\installcorenamespace{mathradicalalternative}

\installcommandhandler \??mathradical {mathradical} \??mathradical

\setupmathradical
  [\c!alternative=\v!normal,
   \c!mpoffset=.25\exheight,
   \c!height=\zeropoint,
   \c!depth=\zeropoint,
   \c!strut=\v!height,
   \c!source=\zerocount]

\appendtoks
    \frozen\protected\instance\edefcsname\currentmathradical\endcsname{\math_radical_handle{\currentmathradical}}
\to \everydefinemathradical

\mutable\let\currentmathradical      \empty
\mutable\let\currentmathradicaldegree\empty

\setmathignore\Umathradicaldegreebefore\plusone

\installcorenamespace{mathwhateverstrut}

\defcsname\??mathwhateverstrut\v!height\endcsname{\mathheightstrut}
\defcsname\??mathwhateverstrut\v!depth \endcsname{\mathdepthstrut}
\defcsname\??mathwhateverstrut\v!math  \endcsname{\mathstrut}
\defcsname\??mathwhateverstrut\v!yes   \endcsname{\strut}
%letcsname\??mathwhateverstrut\v!no    \endcsname\relax

\tolerant\protected\def\math_radical_handle#tag#*[#settings]#*[#degree]#:#body%
  {\begingroup
   \edef\currentmathradical{#tag}%
   \ifparameter#degree\or
     \edef\currentmathradicaldegree{#degree}%
     \setupcurrentmathradical[#settings]%
   \else
     \edef\currentmathradicaldegree{#settings}%
   \fi
   \ifempty\currentmathradicaldegree
     \let\currentmathradicaldegree\m_math_no_degree
   \fi
   \math_radical_alternative{%
     \begincsname\??mathwhateverstrut\mathradicalparameter\c!strut\endcsname
     #body%
   }%
   \endgroup}

\def\m_math_no_degree{{}}

% for every font
%
% \appendtoks
%    \Umathradicaldegreebefore\allmathstyles\zeropoint
% \to \everymathematics

% style width [options: left middle right]

%D \starttyping
%D \definemathradical[esqrt][sqrt][height=\maxdimen,depth=\maxdimen]
%D \definemathradical[fsqrt][sqrt][height=3ex,depth=2ex]
%D \definemathradical[ssqrt][sqrt][height=-.5pt,depth=-.5pt]
%D
%D \def\TestSqrt#1%
%D   {test $      #1{x}           + #1{\sin(x)}                         $ test\par
%D    test $      #1{x}           + #1{\sin(x)} + #1{\frac{1}{x}}       $ test\par
%D    test $      #1{x} + #1{x^2}                                       $ test\par
%D    test $\left(#1{x} + #1{x^2}                                \right)$ test\par}
%D
%D \TestSqrt\sqrt \blank % dynamic
%D \TestSqrt\esqrt\blank % equal
%D \TestSqrt\fsqrt\blank % fixed
%D \TestSqrt\ssqrt\blank % squeezed
%D \stoptyping

\def\math_radical_alternative{\csname\??mathradicalalternative\mathradicalparameter\c!alternative\endcsname}

\integerdef\c_radical_unicode "221A

% We use a strut in the degree because not all fonts have the right gaps set up but
% as struts are sort of predictable we can now fix all fonts in the lfg file.

\protected\def\math_radical_common#degree%
  {\Uroot
     \s!height\dimexpr\mathradicalparameter\c!height\relax
     \s!depth \dimexpr\mathradicalparameter\c!depth\relax
     \s!source\numexpr\namedboxanchor{\mathradicalparameter\c!source}\relax
     \s!style \normalmathstyle
     \zerocount \c_radical_unicode
     {\mathstrut#degree}}

\defcsname\??mathradicalalternative\v!default\endcsname %  #body%
  {\math_radical_common{\currentmathradicaldegree}}   % {#body}}

\defcsname\??mathradicalalternative\v!normal\endcsname#body%
  {\edef\p_color{\mathradicalparameter\c!color}%
   \ifempty\p_color
     \math_radical_common{\currentmathradicaldegree}{#body}% {} really needed as \rootradical expands first
   \orelse\ifempty\currentmathradicaldegree
     \pushcolor[\p_color]%
     \math_radical_common{\currentmathradicaldegree}%
     {\popcolor#body}%
   \else
     \pushcolor[\p_color]%
     \math_radical_common{\popcolor\currentmathradicaldegree\pushcolor[\p_color]}%
     {\popcolor#body}%
   \fi}

\startMPextensions
    vardef math_radical_simple(expr w,h,d,o) =
        (-h/2-o,h/2-o) --
        (-h/4-o,-d-o)  --
        (-o,h+o)       --
        (w+o,h+o)      --
        (w+o,h-h/10+o)
    enddef ;
\stopMPextensions

\startuniqueMPgraphic{minifun::math:radical:default}%{...}
    draw
        math_radical_simple(OverlayWidth,OverlayHeight,OverlayDepth,OverlayOffset)
      % withpen pencircle xscaled (2OverlayLineWidth) yscaled (3OverlayLineWidth/4) rotated 30
        withpen pencircle scaled OverlayLineWidth
      % dashed evenly
        withcolor OverlayLineColor ;
\stopuniqueMPgraphic

% todo: spacing .. this is just an experiment (article driven)

\defcsname\??mathradicalalternative\v!mp\endcsname#body% we could use dowithnextbox
  {\begingroup
   \scratchoffset\mathradicalparameter\c!mpoffset
   \setbox\nextbox\mathstylehbox{#body}%
   % we use the \overlay variables as these are passes anyway and
   % it's more efficient than using parameters
   \d_overlay_width    \wd\nextbox
   \d_overlay_height   \ht\nextbox
   \d_overlay_depth    \dp\nextbox
   \d_overlay_offset   \scratchoffset
   \d_overlay_linewidth\the\dimexpr\triggeredmathstyleparameter\Umathfractionrule
   %
   \edef\overlaylinecolor{\mathradicalparameter\c!color}%
   %
   \edef\p_mp{\mathradicalparameter\c!mp}%
   %
   \setbox\scratchbox\hpack\bgroup % todo: tag this box as sqrt
     \uniqueMPgraphic
       {\p_mp}%
      %{...}%
   \egroup
   \scratchdimen       \wd\scratchbox
   \scratchtopoffset   \dimexpr\scratchoffset+\dp\nextbox\relax
   \scratchbottomoffset\dimexpr\scratchoffset+\ht\nextbox/2\relax
   \hpack to \scratchdimen{\hss\box\nextbox\hskip\scratchoffset}%
   \hskip-\scratchdimen
   \lower\dimexpr\scratchtopoffset\box\scratchbox%
   \ifx\currentmathradicaldegree\empty \else
     \setbox\scratchbox\mathstylehbox{\scriptscriptstyle\currentmathradicaldegree\hss}%
     \wd\scratchbox\scratchdimen
     \hskip-\scratchdimen
     \raise\dimexpr\scratchbottomoffset\box\scratchbox
   \fi
   \endgroup}

\definemathradical[sqrt][mp=minifun::math:radical:default]

% \setupmathradical[sqrt][alternative=normal,color=darkblue]
% \setupmathradical[sqrt][alternative=mp,color=darkgreen]

%D Because I wanted to illustrate some more fun stuff another mechanism
%D is provided as well ... let's put some dangerous tools in the hand of
%D math jugglers like Aditya.

\installcorenamespace{mathornament}
\installcorenamespace{mathornamentalternative}

\installcommandhandler \??mathornament {mathornament} \??mathornament

\setupmathornament
  [\c!alternative=\v!mp, % currently mp only .. maybe some day layer too
   \c!mpoffset=.25\exheight]

\appendtoks
    \frozen\protected\instance\edefcsname\currentmathornament\endcsname
      {\math_ornament_handle{\currentmathornament}}%
\to \everydefinemathornament

\protected\def\math_ornament_handle#tag#body%
  {\begingroup
   \edef\currentmathornament{#tag}%
   \csname\??mathornamentalternative\mathornamentparameter\c!alternative\endcsname{#body}%
   \endgroup}

\defcsname\??mathornamentalternative\v!mp\endcsname#body% we could use dowithnextbox
  {\begingroup
   \scratchoffset\mathornamentparameter\c!mpoffset
   \setbox\nextbox\mathstylehbox{#body}%
   \d_overlay_width    \wd\nextbox
   \d_overlay_height   \ht\nextbox
   \d_overlay_depth    \dp\nextbox
   \d_overlay_offset   \scratchoffset
   \d_overlay_linewidth\linewidth
   \edef\overlaylinecolor{\mathornamentparameter\c!color}%
   \edef\p_mp{\mathornamentparameter\c!mp}%
   % the width of the graphic determines the width of the final result
   \setbox\scratchbox\hpack{\uniqueMPgraphic{\p_mp}}% todo: add code key + tag
   \hpack to \wd\scratchbox{\hss\box\nextbox\hss}%
   \hskip-\wd\scratchbox
   \box\scratchbox
   \endgroup}

% \startMPextensions
%     vardef math_ornament_hat(expr w,h,d,o,l) =
%         image ( path p ; p :=
%             (w/2,h + 10l) --
%             (o + w,h + o) --
%             (w/2,h + 7l) --
%             (-o,h + o) --
%             cycle ;
%             fill p ;
%             setbounds currentpicture to (-o,0) -- (w+o,0) -- (w+o,h+2o) -- (-o,h+2o) -- cycle ;
%         )
%     enddef ;
% \stopMPextensions
%
% \startuniqueMPgraphic{math:ornament:hat}
%     draw
%         math_ornament_hat(
%             OverlayWidth,
%             OverlayHeight,
%             OverlayDepth,
%             OverlayOffset,
%             OverlayLineWidth
%         )
%     withpen
%         pencircle
%             xscaled (2OverlayLineWidth)
%             yscaled (3OverlayLineWidth/4)
%             rotated 30
%     withcolor
%         OverlayLineColor ;
%         draw boundingbox currentpicture;
% \stopuniqueMPgraphic
%
% \definemathornament [mathhat] [mp=math:ornament:hat]
%
% \dorecurse{8}{$\mathhat{\blackrule[width=#1ex,color=gray]}$ }

\protect \endinput
