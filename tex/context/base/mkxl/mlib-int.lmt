if not modules then modules = { } end modules ['mlib-int'] = {
    version   = 1.001,
    comment   = "companion to mlib-ctx.mkiv",
    author    = "Hans Hagen, PRAGMA-ADE, Hasselt NL",
    copyright = "PRAGMA ADE / ConTeXt Development Team",
    license   = "see context related readme files",
}

local factor         = number.dimenfactors.bp
local isdimen        = tex.isdimen
local iscount        = tex.iscount
local getdimen       = tex.getdimen
local getcount       = tex.getcount
local getmacro       = tokens.getters.macro
local get            = tex.get

local registerscript = metapost.registerscript
local registerdirect = metapost.registerdirect

do

    local t = os.date("*t") -- maybe this should be a very early on global

    -- If we want to do a vardef then we first need to catch an endgroup and
    -- that then fails because we have a variable sitting there, so they need
    -- to be def's at the mp end.

    local assignment_code = metapost.codes.assignment

    local mpscannext      = mp.scan.next
    local mpscaninteger   = mp.scan.integer

    local function item(name)
        local n = mpscannext(true) -- keep
        if n == assignment_code then
            mpscannext()
            t[name] = mpscaninteger()
        else
            return t[name]
        end
    end

    registerdirect("year",   function() return item("year")  end)
    registerdirect("month",  function() return item("month") end)
    registerdirect("day",    function() return item("day")   end)
    registerdirect("hour",   function() return item("hour")  end)
    registerdirect("minute", function() return item("min")   end)
    registerdirect("second", function() return item("sec")   end)

end

do

        -- These get swapped so the d_ numbers change.

        registerdirect("PaperHeight",         function() return getdimen("paperheight")         * factor end)
        registerdirect("PaperWidth",          function() return getdimen("paperwidth")          * factor end)
        registerdirect("PrintPaperHeight",    function() return getdimen("printpaperheight")    * factor end)
        registerdirect("PrintPaperWidth",     function() return getdimen("printpaperwidth")     * factor end)
        registerdirect("BackSpace",           function() return getdimen("backspace")           * factor end)
        registerdirect("CutSpace",            function() return getdimen("cutspace")            * factor end)

        registerdirect("LeftEdgeWidth",       function() return getdimen("leftedgewidth")       * factor end)
        registerdirect("LeftEdgeDistance",    function() return getdimen("leftedgedistance")    * factor end)
        registerdirect("LeftMarginWidth",     function() return getdimen("leftmarginwidth")     * factor end)
        registerdirect("LeftMarginDistance",  function() return getdimen("leftmargindistance")  * factor end)
        registerdirect("RightMarginDistance", function() return getdimen("rightmargindistance") * factor end)
        registerdirect("RightMarginWidth",    function() return getdimen("rightmarginwidth")    * factor end)
        registerdirect("RightEdgeDistance",   function() return getdimen("rightedgedistance")   * factor end)
        registerdirect("RightEdgeWidth",      function() return getdimen("rightedgewidth")      * factor end)

        -- leftmargintotal   rightmargintotal -- not yet
        -- leftedgetotal     rightedgetotal
        -- leftsidetotal     rightsidetotal
        -- leftcombitotal    rightcombitotal
        -- innermargintotal  outermargintotal
        -- inneredgetotal    outeredgetotal
        -- innercombitotal   outercombitotal
        -- innersidetotal    outersidetotal

        local d_leftedgewidth       = isdimen("leftedgewidth")
        local d_leftedgedistance    = isdimen("leftedgedistance")
        local d_leftmarginwidth     = isdimen("leftmarginwidth")
        local d_leftmargindistance  = isdimen("leftmargindistance")
        local d_rightmargindistance = isdimen("rightmargindistance")
        local d_rightmarginwidth    = isdimen("rightmarginwidth")
        local d_rightedgedistance   = isdimen("rightedgedistance")
        local d_rightedgewidth      = isdimen("rightedgewidth")

        registerdirect("InnerMarginDistance",  function() return getdimen(d_leftmargindistance ) * factor end)
        registerdirect("InnerMarginWidth",     function() return getdimen(d_leftmarginwidth    ) * factor end)
        registerdirect("OuterMarginDistance",  function() return getdimen(d_rightmargindistance) * factor end)
        registerdirect("OuterMarginWidth",     function() return getdimen(d_rightmarginwidth   ) * factor end)
        registerdirect("InnerEdgeDistance",    function() return getdimen(d_leftmargindistance ) * factor end)
        registerdirect("InnerEdgeWidth",       function() return getdimen(d_leftmarginwidth    ) * factor end)
        registerdirect("OuterEdgeDistance",    function() return getdimen(d_rightedgedistance  ) * factor end)
        registerdirect("OuterEdgeWidth",       function() return getdimen(d_rightedgewidth     ) * factor end)

        -- local onrightpage = structures.pages.on_right

        -- registerdirect("InnerMarginDistance",  function() return getdimen(onrightpage() and "leftmargindistance"  or "rightmargindistance") * factor end)
        -- registerdirect("InnerMarginWidth",     function() return getdimen(onrightpage() and "leftmarginwidth"     or "rightmarginwidth"   ) * factor end)
        -- registerdirect("OuterMarginDistance",  function() return getdimen(onrightpage() and "rightmargindistance" or "leftmargindistance" ) * factor end)
        -- registerdirect("OuterMarginWidth",     function() return getdimen(onrightpage() and "rightmarginwidth"    or "leftmarginwidth"    ) * factor end)
        -- registerdirect("InnerEdgeDistance",    function() return getdimen(onrightpage() and "leftmargindistance"  or "rightmargindistance") * factor end)
        -- registerdirect("InnerEdgeWidth",       function() return getdimen(onrightpage() and "leftmarginwidth"     or "rightmarginwidth"   ) * factor end)
        -- registerdirect("OuterEdgeDistance",    function() return getdimen(onrightpage() and "rightedgedistance"   or "leftedgedistance"   ) * factor end)
        -- registerdirect("OuterEdgeWidth",       function() return getdimen(onrightpage() and "rightedgewidth"      or "leftedgewidth"      ) * factor end)

        -- These have stable d_ numbers.

        local d_topspace       = isdimen("topspace")       registerdirect("TopSpace",       function() return getdimen(d_topspace)       * factor end)
        local d_bottomspace    = isdimen("bottomspace")    registerdirect("BottomSpace",    function() return getdimen(d_bottomspace)    * factor end)
        local d_makeupheight   = isdimen("makeupheight")   registerdirect("MakeupHeight",   function() return getdimen(d_makeupheight)   * factor end)
        local d_makeupwidth    = isdimen("makeupwidth")    registerdirect("MakeupWidth",    function() return getdimen(d_makeupwidth)    * factor end)
        local d_topheight      = isdimen("topheight")      registerdirect("TopHeight",      function() return getdimen(d_topheight)      * factor end)
        local d_topdistance    = isdimen("topdistance")    registerdirect("TopDistance",    function() return getdimen(d_topdistance)    * factor end)
        local d_headerheight   = isdimen("headerheight")   registerdirect("HeaderHeight",   function() return getdimen(d_headerheight)   * factor end)
        local d_headerdistance = isdimen("headerdistance") registerdirect("HeaderDistance", function() return getdimen(d_headerdistance) * factor end)
        local d_textheight     = isdimen("textheight")     registerdirect("TextHeight",     function() return getdimen(d_textheight)     * factor end)
        local d_footerdistance = isdimen("footerdistance") registerdirect("FooterDistance", function() return getdimen(d_footerdistance) * factor end)
        local d_footerheight   = isdimen("footerheight")   registerdirect("FooterHeight",   function() return getdimen(d_footerheight)   * factor end)
        local d_bottomdistance = isdimen("bottomdistance") registerdirect("BottomDistance", function() return getdimen(d_bottomdistance) * factor end)
        local d_bottomheight   = isdimen("bottomheight")   registerdirect("BottomHeight",   function() return getdimen(d_bottomheight)   * factor end)
        local d_textwidth      = isdimen("textwidth")      registerdirect("TextWidth",      function() return getdimen(d_textwidth)      * factor end)

end

do

    local d_pagebackgroundoffset = isdimen("pagebackgroundoffset") registerdirect("PageOffset",           function() return getdimen(d_pagebackgroundoffset) * factor end)
    local d_pagebackgrounddepth  = isdimen("pagebackgrounddepth")  registerdirect("PageDepth",            function() return getdimen(d_pagebackgrounddepth)  * factor end)
    local c_layoutcolumns        = iscount("layoutcolumns")        registerdirect("LayoutColumns",        function() return getcount(c_layoutcolumns)                 end)
    local d_layoutcolumndistance = isdimen("layoutcolumndistance") registerdirect("LayoutColumnDistance", function() return getdimen(d_layoutcolumndistance) * factor end)
    local d_layoutcolumnwidth    = isdimen("layoutcolumnwidth")    registerdirect("LayoutColumnWidth",    function() return getdimen(d_layoutcolumnwidth)    * factor end)
    local d_spinewidth           = isdimen("spinewidth")           registerdirect("SpineWidth",           function() return getdimen(d_spinewidth)           * factor end)
    local d_paperbleed           = isdimen("paperbleed")           registerdirect("PaperBleed",           function() return getdimen(d_paperbleed)           * factor end)

end

do

    local c_realpageno    = iscount("realpageno")    registerdirect("RealPageNumber", function() return getcount(c_realpageno)    end)
    local c_lastpageno    = iscount("lastpageno")    registerdirect("LastPageNumber", function() return getcount(c_lastpageno)    end)

    local c_userpageno    = iscount("userpageno")    registerdirect("PageNumber",     function() return getcount(c_userpageno)    end)
    local c_lastpageno    = iscount("lastpageno")    registerdirect("NOfPages",       function() return getcount(c_lastpageno)    end)

    local c_subpageno     = iscount("subpageno")     registerdirect("SubPageNumber",  function() return getcount(c_subpageno)     end)
    local c_lastsubpageno = iscount("lastsubpageno") registerdirect("NOfSubPages",    function() return getcount(c_lastsubpageno) end)

    local c_mofcolumns    = iscount("mofcolumns")    registerdirect("CurrentColumn",  function() return getcount(c_mofcolumns)    end)
    local c_nofcolumns    = iscount("nofcolumns")    registerdirect("NOfColumns",     function() return getcount(c_nofcolumns)    end)

end

do

    registerdirect("BaseLineSkip",  function() return get("baselineskip",true) * factor end)
    registerdirect("TopSkip",       function() return get("topskip",true)      * factor end)
    registerdirect("CurrentWidth",  function() return get("hsize")             * factor end)
    registerdirect("CurrentHeight", function() return get("vsize")             * factor end)
    registerdirect("HSize",         function() return get("hsize")             * factor end)
    registerdirect("VSize",         function() return get("vsize")             * factor end)

    local emwidths  = fonts.hashes.emwidths
    local exheights = fonts.hashes.exheights

    registerdirect("EmWidth",  function() return emwidths [false] * factor end)
    registerdirect("ExHeight", function() return exheights[false] * factor end)

end

do

    local d_lineheight   = isdimen("lineheight")   registerdirect("LineHeight",   function() return getdimen(d_lineheight)   * factor end)
    local d_bodyfontsize = isdimen("bodyfontsize") registerdirect("BodyFontSize", function() return getdimen(d_bodyfontsize) * factor end)
    local d_strutht      = isdimen("strutht")      registerdirect("StrutHeight",  function() return getdimen(d_strutht)      * factor end)
    local d_strutdp      = isdimen("strutdp")      registerdirect("StrutDepth",   function() return getdimen(d_strutdp)      * factor end)

end

do

    local d_overlay_width     = isdimen("d_overlay_width")     registerdirect("OverlayWidth",     function() return getdimen(d_overlay_width)     * factor end)
    local d_overlay_height    = isdimen("d_overlay_height")    registerdirect("OverlayHeight",    function() return getdimen(d_overlay_height)    * factor end)
    local d_overlay_depth     = isdimen("d_overlay_depth")     registerdirect("OverlayDepth",     function() return getdimen(d_overlay_depth)     * factor end)
    local d_overlay_linewidth = isdimen("d_overlay_linewidth") registerdirect("OverlayLineWidth", function() return getdimen(d_overlay_linewidth) * factor end)
    local d_overlay_offset    = isdimen("d_overlay_offset")    registerdirect("OverlayOffset",    function() return getdimen(d_overlay_offset)    * factor end)
                                                               registerdirect("OverlayRegion",    function() return getmacro("m_overlay_region")           end)
                                                               registerdirect("CurrentLayout",    function() return getmacro("currentlayout")              end)
                                                               registerdirect("OverlayColor",     function() return getmacro("overlaycolor")               end)
                                                               registerdirect("OverlayLineColor", function() return getmacro("overlaylinecolor")               end)

end

do

    registerdirect("LastChangedLayoutPage",function() return getcount("c_page_layouts_changed") end)
    registerdirect("SwapMarginDimensions", function() token.expandmacro("swapmargindimensions") end)

    registerdirect("PageFraction",     structures.pages.fraction)
    registerdirect("OnRightPage",      structures.pages.on_right)
    registerdirect("OnOddPage",        structures.pages.is_odd)
    registerdirect("InPageBody",       structures.pages.in_body)
    --------------("LayoutHasChanged", structures.pages.has_changed)

end

do

    local function defaultcolormodel() -- can be helper
        local colormethod = getcount("MPcolormethod")
        return (colormethod == 0 or colormethod == 1) and 1 or 3
    end

    registerdirect("defaultcolormodel", defaultcolormodel)

end

do

    -- see node-rul.*
    -- offset is a multiplier
    -- factor is the amount

    -- TODO: dimensions are yet undefined so we will move this

    registerdirect("RuleWidth",     function() return getdimen("d_rule_width")  * factor end)
    registerdirect("RuleHeight",    function() return getdimen("d_rule_height") * factor end)
    registerdirect("RuleDepth",     function() return getdimen("d_rule_depth")  * factor end)
    registerdirect("RuleH",         function() return getdimen("d_rule_h")      * factor end)
    registerdirect("RuleV",         function() return getdimen("d_rule_v")      * factor end)
    registerdirect("RuleThickness", function() return getdimen("d_rule_line")   * factor end)
    registerdirect("RuleOffset",    function() return getdimen("d_rule_offset") / 65536  end) -- not factor
    registerdirect("RuleDirection", function() return getmacro("m_rule_direction")       end)
    registerdirect("RuleFactor",    function() return getdimen("d_rule_factor") * factor end)
    registerdirect("RuleOption",    function() return getmacro("m_rule_option")          end)
    registerscript("RuleColor",     function() return getmacro("m_rule_color")           end)

end

-- see typo-ada.*

do

    local d_adaptive_width  = isdimen("d_adaptive_width")  registerdirect("AdaptiveWidth",     function() return getdimen(d_adaptive_width)  * factor end)
    local d_adaptive_height = isdimen("d_adaptive_height") registerdirect("AdaptiveHeight",    function() return getdimen(d_adaptive_height) * factor end)
    local d_adaptive_depth  = isdimen("d_adaptive_depth")  registerdirect("AdaptiveDepth",     function() return getdimen(d_adaptive_depth)  * factor end)
    local d_adaptive_line   = isdimen("d_adaptive_line")   registerdirect("AdaptiveThickness", function() return getdimen(d_adaptive_line)   * factor end)
                                                           registerdirect("AdaptiveColor",     function() return getmacro("m_adaptive_color") end)

    registerdirect("AdaptiveTotal", function()
        return (getdimen(d_adaptive_height) + getdimen(d_adaptive_depth)) * factor
    end)

end
