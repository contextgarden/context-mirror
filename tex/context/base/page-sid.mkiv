%D \module
%D   [       file=page-sid,
%D        version=2000.10.20,
%D          title=\CONTEXT\ Page Macros,
%D       subtitle=Side Floats,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA ADE \& \CONTEXT\ Development Team}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

\writestatus{loading}{ConTeXt Page Macros / Side Floats}

\unprotect

% These macro deal with side floats. We started with Daniel
% Comenetz macros as published in TUGBoat Volume 14 (1993),
% No.\ 1: Anchored Figures at Either Margin. I extended and
% patched the macros to suite our needs which results in a
% messy module. Therefore, this module badly needs an update
% because it's now a mixture of old and new macros.

% Interesting cases where it goes wrong:
%
% \placefigure[left]{}{} \dorecurse{3}{\input ward } {\par} \input ward
%
% Here we get an unwanted carried over hangindent and parindent. A
% solution is to associate it with the local par node instead. This
% is something to discuss with Taco as it could be a new luatex
% feature: explicitly set par properties.

% Maybe I should just rewrite the lot.

\newdimen       \d_page_sides_height       % includes the topskip
\newdimen       \d_page_sides_width
\newdimen       \d_page_sides_hsize
\newdimen       \d_page_sides_vsize
\newdimen       \d_page_sides_vsize_reset  \d_page_sides_vsize_reset -\onepoint % signal (could be a chardef)
\newdimen       \d_page_sides_progress
\newdimen       \d_page_sides_page_total
\newdimen       \d_page_sides_saved_depth
\newdimen       \d_page_sides_grid_shift

\newbox         \b_page_sides_bottom

\newcount       \c_page_sides_lines_done
\newcount       \c_page_sides_checks_done
\newcount       \c_page_sides_n_of_lines
\newcount       \c_page_sides_n_of_hang
\newconstant    \c_page_sides_float_type

\newconditional \c_page_sides_short
\newconditional \c_page_sides_flag

\newconditional \c_page_sides_r_eq         % messy, needs checking anyway
\newconditional \c_page_sides_l_eq         % messy, needs checking anyway

\newif          \ifroomforfloat            % shared (will change)
\newif          \iftracesidefloats         % public (might change)

\newdimen       \sidefloatshift            % public
\newdimen       \sidefloatextrashift       % public
\newdimen       \sidefloatleftskip         % public
\newdimen       \sidefloatrightskip        % public
\newdimen       \sidefloatmaximum          % public

\def\backspacefloat  {\global\c_page_sides_float_type\plusone  \page_sides_handle_float}
\def\leftedgefloat   {\global\c_page_sides_float_type\plustwo  \page_sides_handle_float}
\def\leftmarginfloat {\global\c_page_sides_float_type\plusthree\page_sides_handle_float}
\def\leftfloat       {\global\c_page_sides_float_type\plusfour \page_sides_handle_float}
\def\rightfloat      {\global\c_page_sides_float_type\plusfive \page_sides_handle_float}
\def\rightmarginfloat{\global\c_page_sides_float_type\plussix  \page_sides_handle_float}
\def\rightedgefloat  {\global\c_page_sides_float_type\plusseven\page_sides_handle_float}
\def\cutspacefloat   {\global\c_page_sides_float_type\pluseight\page_sides_handle_float}

\let\marginfloat     \cutspacefloat

\let\logsidefloat    \relax

\def\page_sides_insert_info
  {\doinsertfloatinfo}

\def\page_sides_apply_horizontal_shift
  {\ifdim\sidefloatmaximum>\zeropoint
     \ifcase\c_page_sides_float_type
       % invalid
     \or
       % backspace
     \or
       \global\sidefloatshift\dimexpr
         -\sidefloatmaximum
         -\rightorleftpageaction \leftedgedistance   \rightedgedistance
         -\rightorleftpageaction \leftmarginwidth    \rightmarginwidth
         -\rightorleftpageaction \leftmargindistance \rightmargindistance
         -\compensatedinnermakeupmargin
       \relax
     \or
       \global\sidefloatshift\dimexpr
         -\sidefloatmaximum
         -\rightorleftpageaction \leftmargindistance \rightmargindistance
         -\compensatedinnermakeupmargin
       \relax
     \or
       % left
     \or
       % right
     \or
       \global\sidefloatshift\dimexpr
         -\sidefloatmaximum
         -\rightorleftpageaction \leftmargindistance \rightmargindistance
         -\compensatedinnermakeupmargin
       \relax
     \or
       \global\sidefloatshift\dimexpr
         -\sidefloatmaximum
         -\rightorleftpageaction \leftedgedistance   \rightedgedistance
         -\rightorleftpageaction \leftmarginwidth    \rightmarginwidth
         -\rightorleftpageaction \leftmargindistance \rightmargindistance
         -\compensatedinnermakeupmargin
       \relax
     \or
       % cutspace
     \fi
   \fi
   \ifdim\sidefloatshift=\zeropoint \relax
     \ifnum\c_page_sides_float_type=\plusfour
       \global\advance\sidefloatshift\sidefloatextrashift
       \global\sidefloatextrashift\zeropoint
     \else\ifnum\c_page_sides_float_type=\plusfive
       \global\advance\sidefloatshift\sidefloatextrashift
       \global\sidefloatextrashift\zeropoint
     \fi\fi
   \else
     \ifnum\c_page_sides_float_type<\plusfour
       \global\c_page_sides_float_type\plusfour
     \else\ifnum\c_page_sides_float_type>\plusfive
       \global\c_page_sides_float_type\plusfive
     \fi\fi
   \fi}

\def\page_sides_set_skips
  {\global\sidefloatrightskip\zeropoint
   \global\sidefloatleftskip \zeropoint
   \ifcase\c_page_sides_float_type
   \or % backspace
     \global\sidefloatleftskip\dimexpr
       +\rightorleftpageaction \backspace           \cutspace
       +\compensatedinnermakeupmargin
     \relax
   \or % leftedge
     \global\sidefloatleftskip\dimexpr
       +\rightorleftpageaction \leftmargindistance  \rightmargindistance
       +\rightorleftpageaction \leftmarginwidth     \rightmarginwidth
       +\rightorleftpageaction \leftedgedistance    \rightedgedistance
       +\compensatedinnermakeupmargin
     \relax
   \or % leftmargin
     \global\sidefloatleftskip\dimexpr
       +\rightorleftpageaction \leftmargindistance  \rightmargindistance
       +\compensatedinnermakeupmargin
     \relax
   \or % leftside
   \or % rightside
   \or % rightmargin
     \global\sidefloatrightskip\dimexpr
       +\rightorleftpageaction \rightmargindistance \leftmargindistance
       +\compensatedinnermakeupmargin
     \relax
   \or % rightedge
     \global\sidefloatrightskip\dimexpr
       +\rightorleftpageaction \rightmargindistance \leftmargindistance
       +\rightorleftpageaction \rightmarginwidth    \leftmarginwidth
       +\rightorleftpageaction \rightedgedistance   \leftedgedistance
       +\compensatedinnermakeupmargin
     \relax
   \or % cutspace
     \global\sidefloatrightskip\dimexpr
       +\rightorleftpageaction \cutspace            \backspace
       +\compensatedinnermakeupmargin
     \relax
   \fi
   \ifdim\sidefloatrightskip>\zeropoint \doglobal\advance\sidefloatrightskip\rightskip \fi
   \ifdim\sidefloatleftskip >\zeropoint \doglobal\advance\sidefloatleftskip \leftskip  \fi}

\def\page_sides_flush_floats
  {\par
   \ifnum\dimexpr\d_page_sides_vsize-\pagetotal\relax>\zeropoint
     \page_sides_flush_floats_indeed
   \fi
   % also here if used at all \global\holdinginserts\zerocount
   \global\d_page_sides_vsize\d_page_sides_vsize_reset
   \global\setfalse\c_page_sides_short
   \global\setfalse\c_page_sides_flag}

\def\page_sides_flush_floats_indeed
  {\global\advance\d_page_sides_vsize-\sidefloatbottomskip
   \begingroup
   \let\page_sides_flush_floats\relax
   \forgetall
   \doloop
     {\strut
      \iftracesidefloats
        \color[darkgray]%
          {\baselinerulefalse
           \boxrulewidth.5\points
           \ruledhbox{\strut\kern\d_page_sides_width}}%
      \fi
      \par
      \ifdim\dimexpr\d_page_sides_vsize-\pagetotal\relax>\zeropoint
        \ifnum\recurselevel>\plushundred % safeguard, sort of deadcycles
          \exitloop
        \fi
      \else
        \exitloop
      \fi}%
   \endgroup
   \ifdim\parskip>\zeropoint % why this test ?
     \ifdim\sidefloatbottomskip>\parskip
       \nowhitespace
       \vskip\sidefloatbottomskip
     \fi
   \fi}

\def\page_sides_check_floats_after_par
  {\page_sides_check_floats_indeed
   \ifdim\oldpagetotal=\pagetotal \else
     \global\let\page_sides_check_floats\page_sides_check_floats_indeed
     \page_sides_flush_floats
     \global\c_page_sides_n_of_lines\zerocount % here !
   \fi}

\def\page_sides_flush_floats_after_par
  {\xdef\oldpagetotal{\the\pagetotal}%
   \global\let\page_sides_check_floats\page_sides_check_floats_after_par}

\def\page_sides_forget_floats
  {\global\d_page_sides_vsize\d_page_sides_vsize_reset
   \global\c_page_sides_n_of_lines\zerocount
   % also here if used at all \global\holdinginserts\zerocount
   \global\setfalse\c_page_sides_short
   \global\setfalse\c_page_sides_flag}

\let\page_otr_sides_pop_penalties \relax
\let\page_otr_sides_push_penalties\relax

% \def\page_otr_sides_push_penalties % needed ? and right
%   {\widowpenalty\plusone
%    \clubpenalty\plustwo
%    \brokenpenalty\plusone
%    \let\page_otr_sides_push_penalties\relax
%    \edef\page_otr_sides_pop_penalties
%      {\widowpenalty \the\widowpenalty
%       \clubpenalty  \the\clubpenalty
%       \brokenpenalty\the\brokenpenalty
%       \let\page_otr_sides_pop_penalties\relax}}
%
% shouldn't that be:
%
% \def\page_otr_sides_push_penalties % needed?
%   {\let\page_otr_sides_push_penalties\relax
%    \edef\page_otr_sides_pop_penalties
%      {\widowpenalty \the\widowpenalty
%       \clubpenalty  \the\clubpenalty
%       \brokenpenalty\the\brokenpenalty
%       \let\page_otr_sides_pop_penalties\relax}%
%    \widowpenalty\plusone
%    \clubpenalty\plustwo
%    \brokenpenalty\plusone}

\def\page_sides_restore_output_penalty
  {\ifnum\outputpenalty=\plustenthousand \else
     \penalty\outputpenalty
   \fi}

\def\page_sides_output_routine
  {\ifconditional\c_page_sides_short
     \page_sides_output_routine_yes
   \else
     \page_sides_output_routine_nop
   \fi}

\def\page_sides_output_routine_nop
  {\finalsidefloatoutput % indirect call
   \global\d_page_sides_vsize\d_page_sides_vsize_reset
   \global\c_page_sides_n_of_lines\zerocount
   % we can end up in fig lock, so \global\holdinginserts\zerocount here too ?
   \page_otr_sides_pop_penalties}

\def\page_sides_output_routine_yes % we need to rework this ... add pagediscards and such
  {\unvbox\normalpagebox
   \setbox\b_page_sides_bottom\lastbox
   \ifdim\wd\b_page_sides_bottom>\d_page_sides_hsize
     \penalty-201
     \box\b_page_sides_bottom
   \else\ifvoid\b_page_sides_bottom
   \else
     \page_sides_restore_left_indent
     \ifdim\wd\b_page_sides_bottom<\d_page_sides_hsize
       \parskip\zeropoint
       %\noindent
       \ifinner\else\vadjust{\penalty\minusone}\fi
       \ifconditional\c_page_sides_l_eq
         \global\setfalse\c_page_sides_l_eq
       \else
         \global\advance\d_page_sides_hsize -\wd\b_page_sides_bottom
         \ifconditional\c_page_sides_r_eq
           \global\setfalse\c_page_sides_r_eq
         \else
           \global\divide\d_page_sides_hsize \plustwo
         \fi
         \hskip\d_page_sides_hsize
       \fi
     \fi
     \box\b_page_sides_bottom
     \page_sides_restore_output_penalty
   \fi\fi
   % why was this \global\holdinginserts\zerocount
   \global\setfalse\c_page_sides_short}

\def\page_sides_restore_left_indent
  {\relax
   \ifnum\c_page_sides_float_type>\plusfour \else
     \parskip\zeropoint % here ?
     \ifdim\d_page_sides_width>\zeropoint % new, see prikkels
       \noindent
       \ifinner \else
         \vadjust{\penalty\minusone}%
       \fi
       \hskip\d_page_sides_width\relax
    %\else
    %  we have a margin or edge float
     \fi
   \fi}

% The clean way:
%
% \global\setbox\floatbox\hbox % no \hskip, but \kern here
%   {\ifcase\c_page_sides_float_type
%      \vbox{#1}%
%    \or % 1
%      \hskip\sidefloatleftshift
%      \hskip\sidefloatshift
%      \vbox{#1}%
%      \kern-\sidefloatextrashift
%    \or % 2
%      \hskip\sidefloatshift
%      \vbox{#1}%
%      \kern-\sidefloatextrashift
%    \or % 3
%      \hskip\sidefloatshift
%      \vbox{#1}%
%      \kern-\sidefloatextrashift
%    \or % 4
%      \hskip\sidefloatleftshift
%      \hskip\sidefloatshift
%      \vbox{#1\removedepth}%
%      \kern-\sidefloatextrashift
%    \or % 5
%      \hskip-\sidefloatextrashift
%      \vbox{#1}%
%      \kern\sidefloatshift
%      \kern\sidefloatrightshift
%    \or % 6
%      \hskip-\sidefloatextrashift
%      \vbox{#1}%
%      \kern\sidefloatshift
%    \or % 7
%      \hskip-\sidefloatextrashift
%      \vbox{#1}%
%      \kern\sidefloatshift
%    \or % 8
%      \hskip-\sidefloatextrashift
%      \vbox{#1}%
%      \kern\sidefloatshift
%      \kern\sidefloatrightshift
%    \fi}
%
% The compact way:

\def\page_sides_relocate_float#1%
  {\global\setbox\floatbox\hbox % no \hskip, but \kern here
     {\ifnum\c_page_sides_float_type=\plusfour
        \hskip\sidefloatleftshift
      \else\ifnum\c_page_sides_float_type=\plusone
        \hskip\sidefloatleftshift
      \fi\fi
      \ifnum\c_page_sides_float_type>\plusfour
        \hskip-\sidefloatextrashift
      \else
        \hskip\sidefloatshift
      \fi
      \vbox{#1\ifnum\sidefloatalign=\plusfour \removedepth\fi}%
      \ifnum\c_page_sides_float_type>\plusfour
        \kern\sidefloatshift
      \else
        \kern-\sidefloatextrashift
      \fi
      \ifnum\c_page_sides_float_type=\pluseight
        \kern\sidefloatrightshift
      \else\ifnum\c_page_sides_float_type=\plusfive
        \kern\sidefloatrightshift
      \fi\fi}}

\def\page_sides_apply_vertical_shift
  {\ifnum\sidefloatalign=\plusfour
     \getnoflines{\ht\floatbox}%
     \scratchdimen\dimexpr\noflines\lineheight-\strutdepth\relax
     \getrawnoflines\sidefloattopskip
     \advance\scratchdimen\noflines\lineheight
     % todo: maybe rounding problem here
     % \global\setbox\floatbox\hbox{\lower\lineheight\box\floatbox}%
     \global\setbox\floatbox\hbox{\lower\strutdepth\box\floatbox}%
     \ht\floatbox\scratchdimen
     \dp\floatbox\zeropoint
   \fi
   \ifcase\sidefloatalign \else
     \global\sidefloattopskip\zeropoint
   \fi
   \scratchdimen
     \ifnum\c_page_sides_float_type<\plusfour
       \sidefloattopskip
     \else\ifnum\c_page_sides_float_type>\plusfive
       \sidefloattopskip
     \else
       \zeropoint
     \fi\fi
   % the top of the box is at the previous baseline
   \ifcase\sidefloatalign
       % 0 normal
     \advance\scratchdimen\strutdepth % == \sidefloattopoffset
   \or % 1 height
     \advance\scratchdimen\strutdepth % == \sidefloattopoffset
   \or % 2 line
   \or % 3 depth
     \advance\scratchdimen\lineheight
     \advance\scratchdimen\strutdepth
   \or % 4 grid
     \scratchdimen\zeropoint
   \or
     \advance\scratchdimen\strutheight
   \fi
   % new
   \global\c_page_sides_lines_done\zerocount
   \ifnum\c_page_sides_n_of_lines>\zerocount
     \advance\scratchdimen\c_page_sides_n_of_lines\lineheight
   \fi
   \global\setbox\floatbox\hbox % why extra box
     {\vbox
        {\vskip\scratchdimen
         \nointerlineskip
         \box\floatbox
         \ifnum\sidefloatalign=\plusfive \vskip-\lineheight \fi}}%
   \ifnum\c_page_sides_float_type<\plusfour
     \global\sidefloattopskip\zeropoint
   \else\ifnum\c_page_sides_float_type>\plusfive
     \global\sidefloattopskip\zeropoint
   \fi\fi
   \global\sidefloatdownshift\zeropoint}

\def\page_sides_place_float
  {\ifnum\c_page_sides_float_type=\plusfour \kern\sidefloattopskip \fi
   \ifnum\c_page_sides_float_type=\plusfive \kern\sidefloattopskip \fi
   \d_page_sides_saved_depth\prevdepth
   \nointerlineskip
   \ifgridsnapping
     \page_sides_place_float_grid
   \else
     \page_sides_place_float_normal
   \fi
   \par
   \kern-\d_page_sides_height
   \penalty10001 % oeps, this will change
   \normalbaselines
   \prevdepth\d_page_sides_saved_depth}

\def\page_sides_place_float_normal
  {\d_page_sides_grid_shift\zeropoint % be nice
   \page_sides_push_float_inline\firstofoneargument}

% The following needs some more work .. consider this a quick hack. We
% probably need an mkiv hanging grid option.

\def\page_sides_place_snap_to_grid#1%
  {\snaptogrid[\v!line,\v!offset:\the\d_page_sides_grid_shift]\hbox{#1}}

% this will be a grid option in float placement:

\newconstant\c_page_sides_place_grid_shift \c_page_sides_place_grid_shift\plustwo

\def\page_sides_place_float_grid
  {\getrawnoflines\d_page_sides_height % raw ?
   \d_page_sides_height\plustwo\lineheight
   \d_page_sides_grid_shift\the\dimexpr  \noflines\lineheight
     \ifcase\c_page_sides_place_grid_shift
       -3\lineheight    % high
     \or
       -2.5\lineheight  % half
     \else
       -2\lineheight    % low
     \fi
   \relax
   \page_sides_push_float_inline\page_sides_place_snap_to_grid}

\def\page_sides_push_float_inline#1%
  {\begingroup
   \everypar\emptytoks % needed !
   \parskip\zeropoint  % needed !
   \page_sides_set_skips
   \page_sides_insert_info
   \relax
   \lefttoright % \textdir TLT\relax  % or \ifconditional\displaylefttoright below (more work)
   \ifcase\c_page_sides_float_type
     % invalid
   \or % backspace
     \noindent#1{\llap{\rlap{\box\floatbox}\hskip\sidefloatleftskip}}\hfill
   \or % leftedge
     \noindent#1{\llap{\box\floatbox\hskip\sidefloatleftskip}}\hfill
   \or % leftmargin
     \noindent#1{\llap{\box\floatbox\hskip\sidefloatleftskip}}\hfill
   \or % leftside
     \noindent#1{\box\floatbox}\hfill
   \or % rightside
     \hfill#1{\box\floatbox}%
   \or % rightmargin
     \hfill#1{\rlap{\hskip\sidefloatrightskip\box\floatbox}}%
   \or % rightedge
     \hfill#1{\rlap{\hskip\sidefloatrightskip\box\floatbox}}%
   \or % cutspace
     \hfill#1{\rlap{\hskip\sidefloatrightskip\llap{\box\floatbox}}}%
   \fi
   \endgroup}

\def\page_sides_analyse_progress
  {\d_page_sides_progress\d_page_sides_vsize
   \ifconditional\c_page_sides_flag
     \advance\d_page_sides_progress-\d_page_sides_page_total
     \global\setfalse\c_page_sides_flag
   \else
     \advance\d_page_sides_progress-\pagetotal
   \fi}

\def\page_sides_analyse_space
  {\global\settrue\c_page_sides_flag
   \global\d_page_sides_page_total \pagetotal % global
   \ifnum\c_page_sides_float_type<\plusfour
     \global\d_page_sides_width \zeropoint
   \else\ifnum\c_page_sides_float_type>\plusfive
     \global\d_page_sides_width\zeropoint
   \else
     \global\d_page_sides_width\dimexpr\wd\floatbox+\floatsideskip\relax
   \fi\fi
   \ifdim\d_page_sides_width<\zeropoint
     \global\d_page_sides_width\zeropoint
   \fi
   \global\d_page_sides_hsize \dimexpr\hsize-\d_page_sides_width\relax
   \global\d_page_sides_height\dimexpr\ht\floatbox+\dp\floatbox+\sidefloattopskip\relax
   \global\d_page_sides_vsize \dimexpr\d_page_sides_height+\d_page_sides_page_total\relax
   \dimen0\d_page_sides_vsize
   \dimen2\pagegoal
   \relax
   \ifcase\sidefloatmethod
     % method 0 : raw
   \or
     % method 1 : safe
     \dimen2 .99\pagegoal
   \or
     % method 2 : tight
     \advance\dimen0 -\onepoint
   \fi
   \relax % really needed ! ! ! !
   \ifdim\dimen0>\dimen2
     \global\roomforfloatfalse
   \else
     \ifdim\dimexpr\pagegoal-\d_page_sides_vsize\relax<\sidefloatbottomskip
       \global\advance\d_page_sides_vsize \dimen0
       \global\settrue\c_page_sides_short
       \page_otr_sides_push_penalties
       % why was this \global\holdinginserts\plusone
     \else
       \global\advance\d_page_sides_vsize \sidefloatbottomskip
       \global\setfalse\c_page_sides_short
     \fi
     \global\roomforfloattrue
   \fi}

\def\page_sides_prepare_space
  {\par
   \whitespace
   \begingroup
   \everypar\emptytoks
   \forgetall
   \verticalstrut
   \vskip-\struttotal
   \endgroup}

\def\page_sides_handle_float#1% grid (4) is rather experimental
  {\page_sides_prepare_space
   \page_sides_apply_horizontal_shift
   \page_sides_check_previous_float
   \page_sides_inject_dummy_lines
   \page_sides_relocate_float{#1}%
   \page_sides_apply_vertical_shift
   \page_sides_analyse_space
   \ifroomforfloat \else
     \page_otr_fill_and_eject_page
     \page_sides_analyse_space
     \page_sides_inject_dummy_lines
   \fi
   \page_sides_place_float
   \page_sides_check_floats_reset
   \ignorespaces} % not really needed

\def\page_sides_check_floats_indeed
  {\page_sides_analyse_progress
   \ifdim\d_page_sides_progress>\zeropoint
     \page_sides_check_floats_set
   \else
     \page_sides_check_floats_reset
   \fi
   \parskip\ctxparskip}

\let\page_sides_check_floats\page_sides_check_floats_indeed

\def\iffirstsidefloatparagraph
  {\ifcase\c_page_sides_checks_done\or}

\def\page_sides_check_floats_set
  {\scratchdimen\dimexpr\d_page_sides_progress+\strutht-\roundingeps\relax
   \c_page_sides_n_of_hang\scratchdimen
   \divide\c_page_sides_n_of_hang \baselineskip\relax
   \ifnum\c_page_sides_n_of_hang>\zerocount
     % new from here (needs test case, old code)
     \ifcase\c_page_sides_n_of_lines
     \else
       \ifcase\c_page_sides_lines_done
         \global\c_page_sides_lines_done\c_page_sides_n_of_hang
       \else
         \scratchcounter\c_page_sides_lines_done
         \advance\scratchcounter-\c_page_sides_n_of_hang
         \global\advance\c_page_sides_n_of_lines-\scratchcounter
       \fi
     \fi
     % hm, when do we get the parshape branch? needs testing
     \ifnum\c_page_sides_n_of_lines>\zerocount
       \scratchtoks\emptytoks
       \scratchcounter\c_page_sides_n_of_lines
       \scratchdimen\dimexpr\hsize-\d_page_sides_width\relax
       \dorecurse\c_page_sides_n_of_lines
         {\appendtoks \zeropoint \hsize \to \scratchtoks}%
       \ifnum\c_page_sides_n_of_hang>\c_page_sides_n_of_lines
         \advance\c_page_sides_n_of_hang -\c_page_sides_n_of_lines\relax
         \advance\scratchcounter\c_page_sides_n_of_hang
         \dorecurse\c_page_sides_n_of_hang % weird, shouldn't that be scratchcounter
           {\ifnum\c_page_sides_float_type>\plusfour
              \appendtoks \zeropoint         \scratchdimen \to \scratchtoks
            \else
              \appendtoks \d_page_sides_width\scratchdimen \to \scratchtoks
            \fi}%
       \fi
       \parshape
         \numexpr\scratchcounter+\plusone\relax
         \the\scratchtoks  % \scratchcounter
         \zeropoint \hsize % \plusone
       \relax
     \else
       % new till here
       \hangindent \ifnum\c_page_sides_float_type>\plusfour -\fi\d_page_sides_width
       \hangafter-\c_page_sides_n_of_hang
     \fi
   \fi
   \global\advance\c_page_sides_checks_done \plusone
   \iftracesidefloats
     \hskip-\d_page_sides_width
     \color[darkgray]%
       {\vrule\!!height.5\points\!!depth.5\points\!!width\d_page_sides_width
        \llap{\showstruts\strut\hskip.25\bodyfontsize}}%
   \fi}

\def\page_sides_check_floats_reset
  {\global\c_page_sides_checks_done\zerocount}

\def\page_sides_synchronize_floats
  {\ifinner \else
     \page_sides_check_floats
   \fi}

\def\page_sides_check_previous_float
  {\page_sides_analyse_progress
   \ifdim\d_page_sides_progress>\zeropoint \relax
     \ifconditional\c_page_sides_short
       \global\setfalse\c_page_sides_short
       \page_otr_fill_and_eject_page
     \else
       \kern\d_page_sides_progress
     \fi
   \fi}

\def\page_sides_inject_dummy_lines
  {\scratchcounter\pageshrink
   \divide\scratchcounter \baselineskip
   \advance\scratchcounter \plusone
   \parskip\zeropoint
   \dorecurse\scratchcounter{\hbox to \hsize{}}%
   \kern-\scratchcounter\baselineskip
   \penalty\zerocount}

% Display math
%
% If we need this, it will be redone but redefining
% these macros does not really work out in the current
% situation.
%
% \ifx\normalleqno\undefined
%
%   \let\floatrighteqo=\eqno
%   \let\floatleftleqo=\leqno
%
% \else
%
%   \let\floatrighteqo=\normaleqno
%   \let\floatleftleqo=\normalleqno
%
% \fi
%
% \ifx\normaleqno\undefined
%
%   \def\normaleqno
%     {\ifconditional\c_page_sides_short
%        \global\settrue\c_page_sides_r_eq
%      \fi
%      \floatrighteqo}
%
% \else
%
%   \def\eqno
%     {\ifconditional\c_page_sides_short
%        \global\settrue\c_page_sides_r_eq
%      \fi
%      \floatrighteqo}
%
% \fi

\def\adjustsidefloatdisplaylines
  {\aftergroup\page_sides_adjust_display_lines}

\def\page_sides_adjust_display_lines
  {\par
   \noindent
   \ignorespaces}

% We need to hook it into the other otr's. This code will be adapted
% once we rename the callers.

% \def as they can be redefined!

\def\checksidefloat         {\page_sides_check_floats}
\def\flushsidefloats        {\page_sides_flush_floats}
\def\flushsidefloatsafterpar{\page_sides_flush_floats_after_par}
\def\forgetsidefloats       {\page_sides_forget_floats}
\def\synchronizesidefloats  {\page_sides_synchronize_floats}

\let\OTRONEflushsidefloats      \page_sides_flush_floats
\let\OTRONEsynchronizesidefloats\page_sides_synchronize_floats

% page-set
%
% \let\OTRSETflushsidefloats      \forgetsidefloats
% \let\OTRSETsynchronizesidefloats\forgetsidefloats
%
% page-mul
%
% \let\OTRMULflushsidefloats      \forgetsidefloats
% \let\OTRMULsynchronizesidefloats\forgetsidefloats

\registerotrcommand\synchronizesidefloats
\registerotrcommand\flushsidefloats

\protect \endinput
