%D \module
%D   [       file=strc-num,
%D        version=2008.10.20,
%D          title=\CONTEXT\ Structure Macros,
%D       subtitle=Basic Numbering,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA ADE \& \CONTEXT\ Development Team}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

\writestatus{loading}{ConTeXt Structure Macros / Basic Numbering}

\registerctxluafile{strc-num}{1.001}

\unprotect

% work in progress
% to be checked: can we use the command handler code here?

\unexpanded\def\setupstructurecountering{\dodoubleempty\getparameters[\??nn]}

\setupstructurecountering
  [\c!way=\v!by\v!chapter,
%  \c!blockway=,
%  \c!prefixstarter=,
%  \c!prefixstopper=,
   \c!prefixconnector=.,
   \c!prefixsegments=\thenamedstructurecounterlevel\currentstructurecounter,
   \c!start=0,
   \c!prefix=\v!yes,
   \c!state=\v!start]

\setupstructurecountering
  [\c!prefixsegments=\autostructureprefixsegments\sharedstructurecounterparameter]

\def\strc_counters_the#1% we need a nicer name
  {\ifcsname\??nn#1\c!number\endcsname
     \expandafter\strc_counters_the\csname\??nn#1\c!number\endcsname
   \else
     #1%
   \fi}

\def\autostructureprefixsegments#1% todo: \c!prefixsegments=\v!auto
  {2:\thenamedheadlevel{\ctxlua{structures.sections.way("#1\c!way")}}}

\def\structurecounterparameter#1#2% this will become \named....
  {\csname
     \ifcsname\??nn#1#2\endcsname
       \??nn#1#2%
     \else\ifcsname\??nn\strc_counters_the{#1}#2\endcsname
       \??nn\strc_counters_the{#1}#2%
     \else\ifcsname\??nn#2\endcsname
       \??nn#2%
     \else
       \s!empty
     \fi\fi\fi
   \endcsname}

\def\sharedstructurecounterparameter#1%
  {\csname
     \ifcsname\??nn#1\endcsname
       \??nn#1%
     \else
       \s!empty
     \fi
   \endcsname}

\let\numberingparameter\sharedstructurecounterparameter

% \def\structurecounterparameter        #1#2{\csname\dostructurecounterparameter{\??nn#1}#2\endcsname}
% \def\dostructurecounterparameter      #1#2{\ifcsname#1#2\endcsname#1#2\else\expandafter\dostructurecounterparentparameter\csname#1\s!number\endcsname#2\fi}
% \def\dostructurecounterparentparameter#1#2{\ifx#1\relax\s!empty\else\dostructurecounterparameter#1#2\fi}

\unexpanded\def\definestructurecounter
  {\dodoubleempty\dodefinestructurecounter}

\def\dodefinestructurecounter[#1][#2]%
  {\doifassignmentelse{#2}
     {\dododefinestructurecounter[#1][#2]}
     {\doifelsenothing{#2}
        {\dododefinestructurecounter[#1][]}
        {\donodefinestructurecounter[#1][#2]}}}

\def\dododefinestructurecounter[#1][#2]%
  {\getparameters[\??nn#1][\s!counter=,#2]% counter is for internal purposes
   \ctxcommand{definestructurecounter {
      name    = "#1",
      start   = tonumber("\structurecounterparameter{#1}\c!start") or 0,
      counter = "\structurecounterparameter{#1}\s!counter",
      method  = "\structurecounterparameter{#1}\c!method",
   }}%
   \docheckstructurecountersetup{#1}}

\def\donodefinestructurecounter[#1][#2]% inherit
  {\getparameters[\??nn#1][\c!number=#2]%
   \docheckstructurecountersetup{#1}}

\unexpanded\def\setupstructurecounter
  {\dodoubleargument\dosetupstructurecounter}

\def\dosetupstructurecounter[#1][#2]%
  {\getparameters[\??nn#1][\c!start=,#2]%
   \docheckstructurecountersetup{#1}}

% % % %

\def\structurecounterway#1% slow, we need to store it at the tex end
  {\ctxlua{structures.sections.way("\structurecounterparameter{#1}\c!way")}}

% \def\thenamedstructurecounterlevel#1%
%   {\thenamedheadlevel{\structurecounterway{#1}}}

\def\thenamedstructurecounterlevel#1%
  {\xthenamedheadlevel{\structurecounterway{#1}}}

\def\xthenamedheadlevel#1%
  {\xsectionlevel{#1}{\sectionheadsection{\sectionheadcoupling{#1}}}}

\def\xsectionlevel#1#2% direct indirect
  {\csname\??headlevel
     \ifcsname\??headlevel#1\endcsname
       #1%
     \else\ifcsname\??headlevel#2\endcsname
       #2%
     \else
       \v!none
     \fi\fi
   \endcsname}

\def\docheckstructurecountersetup#1% does it have to happen here?
  {% this can be done at the lua end / a bit messy here ... todo ...
   \ifcsname\??nn#1\c!number\endcsname
        \doifelsevalue   {\??nn#1\c!number}{#1} {\letbeundefined{\??nn#1\c!number}}%
       {\doifvaluenothing{\??nn#1\c!number}     {\letbeundefined{\??nn#1\c!number}}}%
   \fi
   \ifcsname\??nn#1\c!number\endcsname
     % it's a clone
   \else
     \edef\currentstructurecounterlevel{\thenamedstructurecounterlevel{#1}}%
%      \ctxlua{% will be a command (depends on sections)
%         structures.counters.restart("#1",1,"\structurecounterparameter{#1}\c!start")
%         structures.counters.setstate("#1","\structurecounterparameter{#1}\c!state")
%         structures.counters.setlevel("#1",\currentstructurecounterlevel)
%         structures.sections.setchecker("#1",\currentstructurecounterlevel,structures.counters.reset)
%      }%
     \ctxcommand{checkstructurecountersetup("#1",\currentstructurecounterlevel,
      "\structurecounterparameter{#1}\c!start","\structurecounterparameter{#1}\c!state")}%
   \fi}

\unexpanded\def\doifstructurecounterelse#1{\ctxcommand{doifelsestructurecounter("\strc_counters_the{#1}")}}
\unexpanded\def\doifstructurecounter    #1{\ctxcommand{doifstructurecounter    ("\strc_counters_the{#1}")}}
\unexpanded\def\doifnotstructurecounter #1{\ctxcommand{doifnotstructurecounter ("\strc_counters_the{#1}")}}

\unexpanded\def\setstructurecounter      {\dotripleempty   \strc_counters_set_interfaced}
\unexpanded\def\setstructurecounterown   {\dotripleempty   \strc_counters_setown_interfaced}
\unexpanded\def\restartstructurecounter  {\dotripleempty   \strc_counters_restart_interfaced}
\unexpanded\def\resetstructurecounter    {\dodoubleempty   \strc_counters_reset_interfaced}
\unexpanded\def\incrementstructurecounter{\dodoubleempty   \strc_counters_increment_interfaced}
\unexpanded\def\decrementstructurecounter{\dodoubleempty   \strc_counters_decrement_interfaced}

\unexpanded\def\rawstructurecounter      {\dodoubleargument\strc_counters_raw_interfaced}
\unexpanded\def\laststructurecounter     {\dodoubleargument\strc_counters_last_interfaced}
\unexpanded\def\firststructurecounter    {\dodoubleargument\strc_counters_first_interfaced}
\unexpanded\def\nextstructurecounter     {\dodoubleargument\strc_counters_next_interfaced}
\unexpanded\def\prevstructurecounter     {\dodoubleargument\strc_counters_prev_interfaced}
\unexpanded\def\structurecountersubs     {\dodoubleargument\strc_counters_subs_interfaced}

\unexpanded\def\savestructurecounter     {\dodoubleempty\strc_counters_save_interfaced}
\unexpanded\def\restorestructurecounter  {\dodoubleempty\strc_counters_restore_interfaced}

\def\strc_counters_set_interfaced
  {\ifthirdargument
     \singleexpandafter\strc_counters_set_two
   \else\ifsecondargument
     \doubleexpandafter\strc_counters_set_one
   \else
     \doubleexpandafter\gobblethreeoptionals
   \fi\fi}

\def\strc_counters_setown_interfaced
  {\ifthirdargument
     \singleexpandafter\strc_counters_setown_two
   \else\ifsecondargument
     \doubleexpandafter\strc_counters_setown_one
   \else
     \doubleexpandafter\gobblethreeoptionals
   \fi\fi}

\def\strc_counters_restart_interfaced
  {\ifthirdargument
     \singleexpandafter\strc_counters_restart_two
   \else\ifsecondargument
     \doubleexpandafter\strc_counters_restart_one
   \else
     \doubleexpandafter\gobblethreeoptionals
   \fi\fi}

\def\strc_counters_reset_interfaced
  {\ifsecondargument
     \singleexpandafter\strc_counters_reset_two
   \else\iffirstargument
     \doubleexpandafter\strc_counters_reset_one
   \else
     \doubleexpandafter\gobbletwooptionals
   \fi\fi}

\def\strc_counters_increment_interfaced
  {\ifsecondargument
     \singleexpandafter\strc_counters_increment_two
   \else\iffirstargument
     \doubleexpandafter\strc_counters_increment_one
   \else
     \doubleexpandafter\gobbletwooptionals
   \fi\fi}

\def\strc_counters_decrement_interfaced
  {\ifsecondargument
     \singleexpandafter\strc_counters_decrement_two
   \else\iffirstargument
     \doubleexpandafter\strc_counters_decrement_one
   \else
     \doubleexpandafter\gobbletwooptionals
   \fi\fi}

\def\strc_counters_raw_interfaced
  {\ifsecondargument
     \singleexpandafter\strc_counters_raw_two
   \else\iffirstargument
     \doubleexpandafter\strc_counters_raw_one
   \else
     \doubleexpandafter\gobbletwooptionals
   \fi\fi}

\def\strc_counters_last_interfaced
  {\ifsecondargument
     \singleexpandafter\strc_counters_last_two
   \else\iffirstargument
     \doubleexpandafter\strc_counters_last_one
   \else
     \doubleexpandafter\gobbletwooptionals
   \fi\fi}

\def\strc_counters_first_interfaced
  {\ifsecondargument
     \singleexpandafter\strc_counters_first_two
   \else\iffirstargument
     \doubleexpandafter\strc_counters_first_one
   \else
     \doubleexpandafter\gobbletwooptionals
   \fi\fi}

\def\strc_counters_prev_interfaced
  {\ifsecondargument
     \singleexpandafter\strc_counters_prev_two
   \else\iffirstargument
     \doubleexpandafter\strc_counters_prev_one
   \else
     \doubleexpandafter\gobbletwooptionals
   \fi\fi}

\def\strc_counters_next_interfaced
  {\ifsecondargument
     \singleexpandafter\strc_counters_next_two
   \else\iffirstargument
     \doubleexpandafter\strc_counters_next_one
   \else
     \doubleexpandafter\gobbletwooptionals
   \fi\fi}

\def\strc_counters_subs_interfaced
  {\ifsecondargument
     \singleexpandafter\strc_counters_subs_two
   \else\iffirstargument
     \doubleexpandafter\strc_counters_subs_one
   \else
     \doubleexpandafter\gobbletwooptionals
   \fi\fi}

\def\strc_counters_save_interfaced
  {\iffirstargument
     \expandafter\strc_counters_save_one
   \else
     \expandafter\gobbleoneoptional
   \fi}

\def\strc_counters_restore_interfaced
  {\iffirstargument
     \expandafter\strc_counters_restore_one
   \else
     \expandafter\gobbleoneoptional
   \fi}

\def\strc_counters_set_two           [#1][#2][#3]{\strc_counters_set_sub      {#1}{#2}{#3}}
\def\strc_counters_setown_two        [#1][#2][#3]{\strc_counters_setown_sub   {#1}{#2}{#3}}
\def\strc_counters_restart_two       [#1][#2][#3]{\strc_counters_restart_sub  {#1}{#2}{#3}}
\def\strc_counters_reset_two             [#1][#2]{\strc_counters_reset_sub    {#1}{#2}}
\def\strc_counters_increment_two         [#1][#2]{\strc_counters_increment_sub{#1}{#2}}
\def\strc_counters_decrement_two         [#1][#2]{\strc_counters_decrement_sub{#1}{#2}}

\def\strc_counters_raw_two               [#1][#2]{\strc_counters_raw_sub      {#1}{#2}}
\def\strc_counters_last_two              [#1][#2]{\strc_counters_last_sub     {#1}{#2}}
\def\strc_counters_first_two             [#1][#2]{\strc_counters_first_sub    {#1}{#2}}
\def\strc_counters_next_two              [#1][#2]{\strc_counters_next_sub     {#1}{#2}}
\def\strc_counters_prev_two              [#1][#2]{\strc_counters_prev_sub     {#1}{#2}}
\def\strc_counters_subs_two              [#1][#2]{\strc_counters_subs_sub     {#1}{#2}}

\def\strc_counters_set_one           [#1][#2][#3]{\strc_counters_set_sub      {#1}\plusone{#2}}
\def\strc_counters_setown_one        [#1][#2][#3]{\strc_counters_setown_sub   {#1}\plusone{#2}}
\def\strc_counters_restart_one       [#1][#2][#3]{\strc_counters_restart_sub  {#1}\plusone{#2}}
\def\strc_counters_reset_one             [#1][#2]{\strc_counters_reset_sub    {#1}\plusone}
\def\strc_counters_increment_one         [#1][#2]{\strc_counters_increment_sub{#1}\plusone}
\def\strc_counters_decrement_one         [#1][#2]{\strc_counters_decrement_sub{#1}\plusone}

\def\strc_counters_raw_one               [#1][#2]{\strc_counters_raw_sub      {#1}\plusone}
\def\strc_counters_last_one              [#1][#2]{\strc_counters_last_sub     {#1}\plusone}
\def\strc_counters_first_one             [#1][#2]{\strc_counters_first_sub    {#1}\plusone}
\def\strc_counters_next_one              [#1][#2]{\strc_counters_next_sub     {#1}\plusone}
\def\strc_counters_prev_one              [#1][#2]{\strc_counters_prev_sub     {#1}\plusone}
\def\strc_counters_subs_one              [#1][#2]{\strc_counters_subs_sub     {#1}\plusone}

\def\strc_counters_save_one                  [#1]{\strc_counters_save         {#1}}
\def\strc_counters_restore_one               [#1]{\strc_counters_restore      {#1}}

\unexpanded\def\strc_counters_set            #1#2{\strc_counters_set_sub      {#1}\plusone{#2}}
\unexpanded\def\strc_counters_setown         #1#2{\strc_counters_setown_sub   {#1}\plusone{#2}}
\unexpanded\def\strc_counters_restart        #1#2{\strc_counters_restart_sub  {#1}\plusone{#2}}
\unexpanded\def\strc_counters_reset            #1{\strc_counters_reset_sub    {#1}\plusone}
\unexpanded\def\strc_counters_increment        #1{\strc_counters_increment_sub{#1}\plusone}
\unexpanded\def\strc_counters_decrement        #1{\strc_counters_decrement_sub{#1}\plusone}

           \def\strc_counters_raw              #1{\strc_counters_raw_sub      {#1}\plusone}
           \def\strc_counters_last             #1{\strc_counters_last_sub     {#1}\plusone}
           \def\strc_counters_first            #1{\strc_counters_first_sub    {#1}\plusone}
           \def\strc_counters_next             #1{\strc_counters_next_sub     {#1}\plusone}
           \def\strc_counters_prev             #1{\strc_counters_prev_sub     {#1}\plusone}
           \def\strc_counters_subs             #1{\strc_counters_subs_sub     {#1}\plusone}

\unexpanded\def\strc_counters_set_sub      #1#2#3{\ctxcommand{setstructurecounter    ("\strc_counters_the{#1}",\number#2,\number#3)}}
\unexpanded\def\strc_counters_setown_sub   #1#2#3{\ctxcommand{setownstructurecounter ("\strc_counters_the{#1}",\number#2,"#3")}}
\unexpanded\def\strc_counters_restart_sub  #1#2#3{\ctxcommand{restartstructurecounter("\strc_counters_the{#1}",\number#2,\number#3)}}
\unexpanded\def\strc_counters_reset_sub      #1#2{\ctxcommand{resetstructurecounter  ("\strc_counters_the{#1}",\number#2)}}
\unexpanded\def\strc_counters_increment_sub  #1#2{\ctxcommand{addstructurecounter    ("\strc_counters_the{#1}",\number#2,1)}}
\unexpanded\def\strc_counters_decrement_sub  #1#2{\ctxcommand{addstructurecounter    ("\strc_counters_the{#1}",\number#2,-1)}}

           \def\strc_counters_raw_sub        #1#2{\ctxcommand{structurecountervalue("\strc_counters_the{#1}",\number#2)}}
           \def\strc_counters_last_sub       #1#2{\ctxcommand{laststructurecounter ("\strc_counters_the{#1}",\number#2)}}
           \def\strc_counters_first_sub      #1#2{\ctxcommand{firststructurecounter("\strc_counters_the{#1}",\number#2)}}
           \def\strc_counters_next_sub       #1#2{\ctxcommand{nextstructurecounter ("\strc_counters_the{#1}",\number#2)}}
           \def\strc_counters_prev_sub       #1#2{\ctxcommand{prevstructurecounter ("\strc_counters_the{#1}",\number#2)}}
           \def\strc_counters_subs_sub       #1#2{\ctxcommand{structurecounterssub ("\strc_counters_the{#1}",\number#2)}}

\unexpanded\def\strc_counters_save             #1{\ctxcommand{savestructurecounter   ("\strc_counters_the{#1}")}}
\unexpanded\def\strc_counters_restore          #1{\ctxcommand{restorestructurecounter("\strc_counters_the{#1}")}}

\unexpanded\def\strc_counters_incremented      #1{\ctxcommand{incrementedstructurecounter("\strc_counters_the{#1}",1, 1)}}
\unexpanded\def\strc_counters_decremented      #1{\ctxcommand{incrementedstructurecounter("\strc_counters_the{#1}",1,-1)}}

\unexpanded\def\showstructurecounter         [#1]{\ctxcommand{tracestructurecounter("\strc_counters_the{#1}")}}

\unexpanded\def\incrementedstructurecounter  [#1]{\strc_counters_incremented{#1}} % expandable, no \dosingleargument
\unexpanded\def\decrementedstructurecounter  [#1]{\strc_counters_decremented{#1}} % expandable, no \dosingleargument

% public variants ... beware, for old cases, from now on the value variants are the
% ones that are expandable

\def\rawstructurecountervalue  [#1]{\strc_counters_raw_sub  {#1}\plusone}
\def\laststructurecountervalue [#1]{\strc_counters_last_sub {#1}\plusone}
\def\firststructurecountervalue[#1]{\strc_counters_first_sub{#1}\plusone}
\def\nextstructurecountervalue [#1]{\strc_counters_next_sub {#1}\plusone}
\def\prevstructurecountervalue [#1]{\strc_counters_prev_sub {#1}\plusone}

\let\rawsubstructurecountervalue  \strc_counters_raw_two
\let\lastsubstructurecountervalue \strc_counters_last_two
\let\firstsubstructurecountervalue\strc_counters_first_two
\let\nextsubstructurecountervalue \strc_counters_next_two
\let\prevsubstructurecountervalue \strc_counters_prev_two

% The bypage check needs a multipass reference and therefore we only check for it when we increment
% and know that some content will be placed. We could also check for spreads.

\unexpanded\def\strc_counters_increment_sub#1#2%
  {% this will be combined into one lua call
   \edef\m_strc_counters_way{\structurecounterway{#1}}%
   \ifx\m_strc_counters_way\v!page
     \checkpagechange{#1}%
     \ifpagechanged
       \strc_counters_reset{#1}%
     \fi
   \fi
   \ctxcommand{addstructurecounter("\strc_counters_the{#1}",\number#2,1)}}

\unexpanded\def\convertedstructurecounter
  {\dodoubleempty\strc_counters_converted}

\def\strc_counters_converted[#1][#2]%
  {\begingroup
   \ifsecondargument\getparameters[\??nn#1][#2]\fi
   \ctxlua{structures.sections.prefixedconverted(
     "\strc_counters_the{#1}",
     {
       prefix        = "\structurecounterparameter{#1}\c!prefix",
       separatorset  = "\structurecounterparameter{#1}\c!prefixseparatorset",
       conversion    = "\structurecounterparameter{#1}\c!prefixconversion",
       conversionset = "\structurecounterparameter{#1}\c!prefixconversionset",
       starter       = \!!bs\structurecounterparameter{#1}\c!prefixstarter\!!es,
       stopper       = \!!bs\structurecounterparameter{#1}\c!prefixstopper\!!es,
       set           = "\structurecounterparameter{#1}\c!prefixset",
       segments      = "\structurecounterparameter{#1}\c!prefixsegments",
       connector     = \!!bs\structurecounterparameter{#1}\c!prefixconnector\!!es,
     },
     {
       order         = "\structurecounterparameter{#1}\c!numberorder",
       separatorset  = "\structurecounterparameter{#1}\c!numberseparatorset",
       conversion    = \!!bs\structurecounterparameter{#1}\c!numberconversion\!!es,
       conversionset = "\structurecounterparameter{#1}\c!numberconversionset",
       starter       = \!!bs\structurecounterparameter{#1}\c!numberstarter\!!es,
       stopper       = \!!bs\structurecounterparameter{#1}\c!numberstopper\!!es,
       segments      = "\structurecounterparameter{#1}\c!numbersegments",
       type          = "\structurecounterparameter{#1}\c!type",
       criterium     = "\structurecounterparameter{#1}\c!criterium", % might change if we also want this with sectioning
     }
   )}%
   \endgroup}

\def\directconvertedstructurecounter#1#2% name, type
  {\ctxlua{structures.sections.prefixedconverted(
     "\strc_counters_the{#1}",
     {
       prefix        = "\structurecounterparameter{#1}\c!prefix",
       separatorset  = "\structurecounterparameter{#1}\c!prefixseparatorset",
       conversion    = "\structurecounterparameter{#1}\c!prefixconversion",
       conversionset = "\structurecounterparameter{#1}\c!prefixconversionset",
    %  starter       = \!!bs\structurecounterparameter{#1}\c!prefixstarter\!!es,
    %  stopper       = \!!bs\structurecounterparameter{#1}\c!prefixstopper\!!es,
       set           = "\structurecounterparameter{#1}\c!prefixset",
       segments      = "\structurecounterparameter{#1}\c!prefixsegments",
       connector     = \!!bs\structurecounterparameter{#1}\c!prefixconnector\!!es,
     },
     {
       order         = "\structurecounterparameter{#1}\c!numberorder",
       separatorset  = "\structurecounterparameter{#1}\c!numberseparatorset",
       conversion    = \!!bs\structurecounterparameter{#1}\c!numberconversion\!!es,
       conversionset = "\structurecounterparameter{#1}\c!numberconversionset",
       starter       = \!!bs\structurecounterparameter{#1}\c!numberstarter\!!es,
       stopper       = \!!bs\structurecounterparameter{#1}\c!numberstopper\!!es,
       segments      = "\structurecounterparameter{#1}\c!numbersegments",
       type          = "#2",
     }
   )}}

\unexpanded\def\convertedsubstructurecounter
  {\dotripleempty\strc_counters_converted_sub}

\def\strc_counters_converted_sub[#1][#2][#3]% #2 can be n or n:m
  {\ifsecondargument
     \strc_counters_converted[#1][\c!numbersegments=#2,#3]%
   \else
     \secondargumentfalse\strc_counters_converted[#1][]%
   \fi}

\let\getstructurecounter\convertedstructurecounter

\unexpanded\def\doifdefinedstructurecounter#1%
  {\ifcsname\s!number#1\c!number\endcsname
     \expandafter\firstofoneargument
   \else
     \expandafter\gobbleoneargument
   \fi}

\unexpanded\def\doifundefinedstructurecounter#1%
  {\ifcsname\s!number#1\c!number\endcsname
     \expandafter\gobbleoneargument
   \else
     \expandafter\firstofoneargument
   \fi}

\unexpanded\def\doifdefinedstructurecounterelse#1%
  {\ifcsname\s!number#1\c!number\endcsname
     \expandafter\firstoftwoarguments
   \else
     \expandafter\secondoftwoarguments
   \fi}

\ifx\checkstructurecounter\undefined \def\checkstructurecounter[#1]{} \fi

\def\checkstructurecounter[#1]{}

%D What follows is a compatibility layer.

\let \numberparameter       \structurecounterparameter % {name}\c!key

\let \definenumber          \definestructurecounter    % [name]
\let \setupnumber           \setupstructurecounter     % [name][setups]

\let \setnumber             \setstructurecounter       % [name]{value}
\let \resetnumber           \resetstructurecounter     % [name]
\let \savenumber            \savestructurecounter      % [name]
\let \restorenumber         \restorestructurecounter   % [name]
\let \incrementnumber       \incrementstructurecounter % [name]
\let \decrementnumber       \decrementstructurecounter % [name]
\let \rawnumber             \rawstructurecounter       % [name]
\let \getnumber             \getstructurecounter       % [name]
\let \convertednumber       \getstructurecounter       % [name]

\let \doifdefinednumber     \doifstructurecounter      % {number}{true}
\let \doifundefinednumber   \doifnotstructurecounter   % {number}{true}
\let \doifdefinednumberelse \doifstructurecounterelse  % {number}{true}{false}

\let \setupnumbering        \setupstructurecountering

% \unexpanded\def\resetnumber {\dosingleargument\doresetnumber}
% \def\doresetnumber      [#1]{\processcommalistwithparameters[#1]\resetstructurecounter}

% \def\accumulatednumber[#1]{}
%
% \unexpanded\def\setupnumbering
%   {\dodoubleempty\getparameters[\??nr]}
%
% \setupnumbering
%   [\c!way=\v!by\v!chapter,
%    \c!blockway=,
%    \c!state=\v!start]

%D Helpers:

% call:
%
% \dostructurecountercomponent
%   \currentfloat
%   \getfloatparameters \floatparameter \detokenizedfloatparameter
%   \hascaption \hastitle \hasnumber
%   [settings][userdata]
%
% sets:
%
% \laststructurecounternumber
% \laststructurecountersynchronize

\newconditional\hasstructurecountercaption
\newconditional\hasstructurecountertitle
\newconditional\hasstructurecounternumber

\unexpanded\def\dostructurecountercomponent#1#2#3#4#5#6#7[#8][#9]% maybe also nolist
  {\begingroup
   %
   #2[\s!haslevel=1,#8]%
   \edef\hasstructurecounterlevel  {#3\s!haslevel}%
   \edef\hasstructurecountercaption{#3\s!hascaption}%
   \edef\hasstructurecountertitle  {#3\s!hastitle}%
   \edef\hasstructurecounternumber {#3\s!hasnumber}%
   %
   \edef\askedprefixsegments{#3\c!prefixsegments}%
   \ifx\askedprefixsegments\v!auto
     \edef\askedprefixsegments{\autostructureprefixsegments#3}%
   \fi
   %
   \edef\currentname{#3\c!name}%
   \ifx\currentname\empty
     \edef\currentname{#1}%
   \fi
   \edef\currentcounter{#3\s!counter}%
   \ifx\currentcounter\empty
     \let\currentcounter\currentname
   \fi
   %
%    \doif{#3\c!title}\v!none{\setfalse\hasstructurecountercaption\setfalse\hasstructurecounternumber}% will become obsolete
%    %
%    \ifx\hasstructurecounternumber\v!yes % here due to previous test but best in callers
%      \doincrementsubstructurecounter[\currentcounter][\hasstructurecounterlevel]%
%    \fi
   %
   \ifx\hasstructurecountercaption\v!yes
     \xdef\currentstructurecomponentname           {#3\c!name}%
     \xdef\currentstructurecomponentlevel          {#3\c!level}%
     \edef\currentstructurecomponentexpansion      {#3\c!expansion}%
     \xdef\currentstructurecomponentxmlsetup       {#3\c!xmlsetup}%
     \xdef\currentstructurecomponentcatcodes       {#3\s!catcodes}%
     \xdef\currentstructurecomponentlabel          {#3\c!label}%
     \xdef\currentstructurecomponentreference      {#3\c!reference}%
     \xdef\currentstructurecomponentreferenceprefix{#3\c!referenceprefix}%
     \ifx\currentstructurecomponentexpansion\s!xml
       \xmlstartraw
         \xdef\currentstructurecomponenttitle   {#3\c!title}%
         \xdef\currentstructurecomponentbookmark{#3\c!bookmark}%
         \xdef\currentstructurecomponentmarking {#3\c!marking}%
         \xdef\currentstructurecomponentlist    {#3\c!list}%
       \xmlstopraw
       \ifx\currentstructurecomponentlist\empty
         \globallet\currentstructurecomponentlist\currentstructurecomponenttitle
       \fi
       \globallet\currentstructurecomponentcoding\s!xml
     \else
       \ifx\currentstructurecomponentexpansion\v!yes
         \xdef\currentstructurecomponenttitle   {#3\c!title}%
         \xdef\currentstructurecomponentbookmark{#3\c!bookmark}%
         \xdef\currentstructurecomponentmarking {#3\c!marking}%
         \xdef\currentstructurecomponentlist    {#3\c!list}%
       \else
         \xdef\currentstructurecomponenttitle   {#4\c!title}%
         \xdef\currentstructurecomponentbookmark{#4\c!bookmark}%
         \xdef\currentstructurecomponentmarking {#4\c!marking}%
         \xdef\currentstructurecomponentlist    {#4\c!list}%
         \iflocation \ifx\currentstructurecomponentbookmark\empty
           \begingroup
           \simplifycommands
           \xdef\currentstructurecomponentbookmark{\detokenize\expandafter{\normalexpanded{#3\c!title}}}%
          \endgroup
         \fi \fi
       \fi
       \ifx\currentstructurecomponentlist\empty
         \globallet\currentstructurecomponentlist\currentstructurecomponenttitle
       \fi
       \globallet\currentstructurecomponentcoding\s!tex
     \fi
     %
     \setnextinternalreference
     \xdef\laststructurecounternumber{\ctxcommand{addtolist{
        metadata = {
            kind     = "#1",
            name     = "\currentname",
            level    = structures.sections.currentlevel(),
            catcodes  = \the\ifx\currentstructurecomponentcatcodes\empty\catcodetable\else\csname\currentstructurecomponentcatcodes\endcsname\fi,
            coding    = "\currentstructurecomponentcoding",
        \ifx\currentstructurecomponentcoding\s!xml
            xmlroot   =  "\xmldocument",
        \fi
        \ifx\currentstructurecomponentxmlsetup\empty \else
            xmlsetup  = "\currentstructurexmlsetup",
        \fi
        },
        references = {
            internal        = \nextinternalreference,
            block           = "\currentsectionblock",
            reference       = "\currentstructurecomponentreference",
            referenceprefix = "\currentstructurecomponentreferenceprefix",
            section         = structures.sections.currentid(),
        },
        titledata = {
            label    = \!!bs\detokenize\expandafter{\currentstructurecomponentlabel    }\!!es,
            title    = \!!bs\detokenize\expandafter{\currentstructurecomponenttitle    }\!!es,
        \ifx\currentstructurecomponentbookmark\currentstructurecomponenttitle \else
            bookmark = \!!bs\detokenize\expandafter{\currentstructurecomponentbookmark }\!!es,
        \fi
        \ifx\currentstructurecomponentmarking\currentstructurecomponenttitle \else
            marking  = \!!bs\detokenize\expandafter{\currentstructurecomponentmarking  }\!!es,
        \fi
        \ifx\currentstructurecomponentlist\currentstructurecomponenttitle \else
          list     = \!!bs\detokenize\expandafter{\currentstructurecomponentlist}\!!es,
        \fi
        },
    \ifx\hasstructurecounternumber\v!yes
        prefixdata = {
            prefix        = "#3\c!prefix",
            separatorset  = "#3\c!prefixseparatorset",
            conversion    = \!!bs#3\c!prefixconversion\!!es,
            conversionset = "#3\c!prefixconversionset",
            set           = "#3\c!prefixset",
        %   segments      = "#3\c!prefixsegments",
            segments      = "\askedprefixsegments",
            connector     = \!!bs#3\c!prefixconnector\!!es,
        },
        numberdata = {
            numbers       = structures.counters.compact("\currentcounter",nil,true),
            separatorset  = "#3\c!numberseparatorset",
            conversion    = \!!bs#3\c!numberconversion\!!es,
            conversionset = "#3\c!numberconversionset",
            starter       = \!!bs#3\c!numberstarter\!!es,
            stopper       = \!!bs#3\c!numberstopper\!!es,
            segments      = "#3\c!numbersegments",
        },
    \fi
        userdata = \!!bs\detokenize{#9}\!!es % will be converted to table at the lua end
       }
     }}%
     \xdef\laststructurecounterattribute  {\ctxlua        {tex.write(structures.references.setinternalreference(nil,nil,\nextinternalreference))}}%
     \xdef\laststructurecountersynchronize{\ctxlatecommand{enhancelist(\laststructurecounternumber)}}%
   \else
     \glet\laststructurecounternumber     \relax
     \glet\laststructurecounterattribute  \attributeunsetvalue
     \glet\laststructurecountersynchronize\relax
   \fi
   \endgroup}

\let\laststructurecounternumber     \relax
\let\laststructurecounterattribute  \relax
\let\laststructurecountersynchronize\relax

\def\dostructurecountersetup#1#2% name \someparameter
  {\setupstructurecounter
     [#1]
     [              \c!start=#2\c!start,
                    \c!state=#2\c!state, % beware, "" == start
                      \c!way=#2\c!way,
                            %
                   \c!prefix=#2\c!prefix,
       \c!prefixseparatorset=#2\c!prefixseparatorset,
         \c!prefixconversion=#2\c!prefixconversion,
      \c!prefixconversionset=#2\c!prefixconversionset,
            \c!prefixstarter=#2\c!prefixstarter,
            \c!prefixstopper=#2\c!prefixstopper,
                \c!prefixset=#2\c!prefixset,
           \c!prefixsegments=#2\c!prefixsegments,
                \c!prefixset=#2\c!prefixset,
          \c!prefixconnector=#2\c!prefixconnector,
                            %
       \c!numberseparatorset=#2\c!numberseparatorset,
         \c!numberconversion=#2\c!numberconversion,
      \c!numberconversionset=#2\c!numberconversionset,
            \c!numberstarter=#2\c!numberstarter,
            \c!numberstopper=#2\c!numberstopper,
           \c!numbersegments=#2\c!numbersegments]}

\def\presetstructurecountersetup#1#2% \setupcommand \someparameter
  {#1%
    [\c!way                =#2\c!way,
     \c!prefix             =#2\c!prefix,
     \c!prefixseparatorset =#2\c!prefixseparatorset,
     \c!prefixconversion   =#2\c!prefixconversion,
     \c!prefixconversionset=#2\c!prefixconversionset,
     \c!prefixstarter      =#2\c!prefixstarter,
     \c!prefixstopper      =#2\c!prefixstopper,
     \c!prefixsegments     =#2\c!prefixsegments,
     \c!prefixset          =#2\c!prefixset,
     \c!prefixconnector    =#2\c!prefixconnector,
     \c!numberseparatorset =#2\c!numberseparatorset,
     \c!numberconversion   =#2\c!numberconversion,
     \c!numberconversionset=#2\c!numberconversionset,
     \c!numberstarter      =#2\c!numberstarter,
     \c!numberstopper      =#2\c!numberstopper,
     \c!numbersegments     =#2\c!numbersegments]}

\protect \endinput
