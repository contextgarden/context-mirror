%D \module
%D   [       file=m-tikz,
%D        version=2021.07.12,
%D          title=\CONTEXT\ Extra Modules,
%D       subtitle=TIKZ support,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright={PRAGMA ADE \& \CONTEXT\ Development Team}]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

%D A fixed variant of the t-tikz module distributed with tikz. For
%D practical reasons per 2021 we split the module for \MKIV\ and
%D \LMTX. (Maybe some day I'll optimize TIKZ a bit.)

\ifdefined\pdflastxpos \else
    \unprotect
        \frozen\overloaded\protected\def\pdflastxpos{\numexpr\clf_lastxpos\relax}
        \frozen\overloaded\protected\def\pdflastypos{\numexpr\clf_lastypos\relax}
    \protect
\fi


\pushoverloadmode

    \pushcatcodetable

        \setcatcodetable\texcatcodes

        \catcode`\@=11
        \catcode`\|=12
        \catcode`\!=12

        \input t-pgf.tex
        \input t-pgffor.tex
        \input tikz.code.tex

    \popcatcodetable

\popoverloadmode

\permanent\protected\def\tikzerrormessage#1#2#3%
  {\writestatus{#1}{#2}}

% For now we need this but we need to educate the user to wrap settings
% in the wrappers. So some day the next line will go. I need to check what
% commands are possible outside a picture.

\overloadmode\zerocount

\permanent\protected\def\starttikzsettings
  {\pushoverloadmode}

\permanent\protected\def\stoptikzsettings
  {\popoverloadmode}

\permanent\protected\def\starttikzpicture
  {\dontleavehmode
   \hcontainer\bgroup
 % \pushoverloadmode
   \ifdefined\PackageError\else \let\PackageError\tikzerrormessage \fi
   \tikzpicture}

\permanent\protected\def\stoptikzpicture
  {\endtikzpicture
 % \popoverloadmode
   \egroup}

% \input t-pgf.tex

\ifx\pgfdefined\undefined

    \let\pgfdefined\relax

   % \input t-pgfcor.tex

    \ifx\pgfcoredefined\undefined

        \let\pgfcoredefined=\relax

        \input t-pgfsys.tex

        \edef\pgfcoreatcode     {\the\catcode`\@}
        \edef\pgfcorebarcode    {\the\catcode`\|}
        \edef\pgfcoreexclaimcode{\the\catcode`\!}

        \catcode`\@=11
        \catcode`\|=12
        \catcode`\!=12

        \input pgfcore.code.tex

        \catcode`\@=\pgfcoreatcode
        \catcode`\|=\pgfcorebarcode
        \catcode`\!=\pgfcoreexclaimcode

        \let\startpgfpicture             \pgfpicture              \let\stoppgfpicture            \endpgfpicture
        \let\startpgfscope               \pgfscope                \let\stoppgfscope              \endpgfscope
        \let\startpgflowlevelscope       \pgflowlevelscope        \let\stoppgflowlevelscope      \endpgflowlevelscope
        \let\startpgfinterruptpath       \pgfinterruptpath        \let\stoppgfinterruptpath      \endpgfinterruptpath
        \let\startpgfinterruptpicture    \pgfinterruptpicture     \let\stoppgfinterruptpicture   \endpgfinterruptpicture
        \let\startpgfinterruptboundingbox\pgfinterruptboundinbox  \let\stoppgfinterruptboudingbox\endpgfinterruptboundingbox

    \fi

    \usepgfmodule[shapes,plot]

\fi

\stopmodule
